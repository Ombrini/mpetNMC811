# General parameter file for electrode materials.
# It's probably easier to begin with one of the specific templates
# such as params_graphite_1param.cfg, params_coke_Fuller94.cfg or
# params_Mn2O4_Fuller94.cfg.

[Particles]
# Type of solid particles
# Options:
# - ACR -- "Allen-Cahn-Reaction" particles. Use ONLY with shape = C3.
# - CHR -- "Cahn-Hilliard-Reaction". Currently req. shape = sphere or cylinder.
# - CHR2 -- 2-concentration field "Cahn-Hilliard-Reaction". Currently req. shape = sphere or cylinder.
# - homog -- homogeneously filling particles
# - homog_sdn -- homogeneously filling particles with size-dependent
# - homog2 -- 2-concentration field model like CHR2 but each layer is
#   treated as homogeneous rather than having transport within each
#   layer
# - diffn -- Particles with rxn at surface and internal solid diffusion
#   WARNING: Using diffn model with BV reaction model assumes surface
#   activity is given by c/(1-c), c = filling fraction, when
#   calculating the reaction rate exchange current density. Consider,
#   e.g., BV_mod01 instead.
type = diffn
# Discretization of solid, m
# Used for non-homogeneous type
# When using phase separating particles, must be less than characteristic interface width, lambda_b:
# lambda_b = (kappa/(rho_s*Omega_a))^(0.5)) [Bazant 2013]
discretization = 1e-9
# Options: sphere, C3, cylinder
#   sphere -- react on all surface area
#   C3 -- react on b surface
#   cylinder -- react on surfaces with radial normal
shape = C3
# C3 a-axis length or cylinder particle thickness, m
thickness = 20e-9
# specific surface area: in units of m^2/g, for graphite products where the specific
# area is given. only is used for SEI modeling. Default can be set to -1 for geometric
# SSA
#ssa = 3.428

[Material]
# muRfunc defines the chemical potential of the reduced state
# (the electron conducting phase, usually solid) as a function of
# filling fraction.
# Options: See props_am.py file, to which new functions can easily be added
muRfunc = LiMn2O4_ss
# material_type defines the material type used in the electrode, used for 
# getting the density of the material for calculations in gravimetric capacity
# used in cycling (options: LMO, LFP, LiC6, NCA)
material_type = LMO
# Log pad (option for muRfunc's containing log terms -- not solid solution)
# Consider turning this on if you experience errors with log(negative)
# It extends the ideal solution into regions outside (0, 1) by a
# (very steep) linear extension instead of a singularity.
# Options: true, false
# default: false
logPad = false
# Noise -- add Langevin noise to the solid dynamics to simulate some
# random thermal fluctuations. This can help to, e.g., trigger a
# spinodal decomposition but slows simulations so should not be
# enabled unless needed.
# Options: true, false
# default: false
noise = false
# Magnitude of the noise (used if noise = true)
# The standard deviation of the normal noise added to the solid
# dynamics
noise_prefac = 1e-6
# Number of segments over which the noise is re-randomized
numnoise = 200
######
# The following parameters are used for some of the materials defined
# by muRfunc. All must be defined in this input file. For solid
# solution materials (containing "_ss"), none of the following are used
# except D.
######
# Note k*298 K = 4.115e-21 J/particle
# Regular solution parameter, J/Li
# Default = 4.51 (k*298 K)
Omega_a = 1.8560e-20
# Secondary interaction terms for 2-variable models
# See, e.g., Ferguson and Bazant 2014
Omega_b = 5.761532e-21
Omega_c = 8.23076e-20
# Gradient penalty, J/m
kappa = 5.0148e-10
# Stress coefficient, Pa
B = 0.1916e9
# Van der Waals-like interaction energy for graphite models
# default: 0.0
EvdW = 0.0
# Total Li site density within the solid, Li/m^3
# Even for 2-parameter models, this should be the full site density
# (not that of an individual layer/lattice)
rho_s = 1.3793e28
# Dimensional diffusivity prefactor (used if type = diffn[2], CHR[2]), m^2/s
D = 5.3e-19
# Dimensionless diffusivity function, (see props_am.Dfuncs class)
# This is a function of solid filling fraction, y, such that
# Flux = -D*Dfunc(y)*grad(c) for solid solution materials, and
# Flux = -D*Dfunc(y)*grad(mu) for thermo-based transport models
# Options: See props_am.py file, to which new functions can easily be added
Dfunc = constant
# Surface wetting (used if type = CHR[2]).
# Change in surface energy with respect to solid concentration, J*m/Li
# set greater than 0 for surface wetting, less than 0 for dewetting
# default: 0e-30
dgammadc = 0e-30
# ACR dimensionless surface wetting (used with LiFePO4, type=ACR)
cwet = 0.98

[Reactions]
# Options:
#   BV: Butler-Volmer from Bazant Acc. Chem. Res. 2013 with gamma_TS = 1/(1-c)
#   BV_gMod01: Like BV with gamma_TS = 1/(c*(1-c))
#   BV_raw: BV with ecd = k0
#   BV_mod01: As in Fuller, Doyle, Newman 1994 cathode
#   BV_mod02: As in Fuller, Doyle, Newman 1994 anode
#   Marcus: As in Bazant Acc. Chem. Res. 2013
#   MHC: See Zeng, Smith, Bai, Bazant, 2014
rxnType = BV
# Exchange current density, A/m^2 (0.1 for h2/Pt)
# Note, for Marcus, this is k0 * exp(-(lambda/kTref)/4)
k0 = 1.6e-1
# Charge transfer coefficient (only used for BV)
alpha = 0.5
# Reorganizational energy, J/Li (used for Marcus and MHC)
# Default 15.2 (k*298 K)
lambda = 6.26e-20
# Film resistance, Ohm m^2
Rfilm = 0e-0

[Degradation]
# SEI determines whether or not to use the SEI model
SEI = True
# Plating determines whether or not to use the plating model
Plating = False
# muRSEI is chemical potential of the SEI
muRSEI = SEI_early
# muRpl is the chemical potential of the SEI
muRpl = plating1
# rho_SEI is the site density in sites/m^3 of the SEI
rho_SEI = 6.02e28
# Li_mm is the inverse site density of lithium plating in sites/mol
Li_mm = 12.99e-6
# vfrac_1 is the volume fraction of the primary SEI that is SEI material
# the rest is porous
vfrac_1 = 0.9
# vfrac_2 is the volume fraction of the secondary SEI that is SEI material
# the rest is porous
vfrac_2 = 0.3
# k0_SEI is the exchange current of the SEI reaction in (A/m^2)
k0_SEI = 50e-11
# k0_SEI is the plating exchange current in (A/m^2)
k0_pl = 2.2e-14
# alpha_SEI is the charge transfer coefficient of SEI (we use alpha_SEI)
# from Kolzenberg, Latz, and Horstmann, ChemSusChem, 2020
alpha_SEI = 0.22
# alpha_pl is the charge transfer coefficient of the plating reaction
alpha_pl = 0.5
# beta2 is an empirical exponential parameter that describes the intercycle
# SEI growth
beta2 = 0.5
# E_ads is the adsorption energy of the electrolyte onto the SEI layer in kBT
E_ads = 3.6
# zeta is the lengthscale at which there is a transition between the primary
# and secondary SEI layers, in m
zeta = 50e-9
# nu is the parameter for modeling the dependence of the SEI layer on lithium 
# ion concentration in the layer (see Das et al. 2019)
nu = 2
# R0SEI is the initial primary SEI film resistivity (Ohm/m^2) of the electronic
# resistivity
R0SEI = 180
# R0SEILi is the initial primary SEI film resistivity (Ohm/m^2) of the ionic
# resistivity
R0SEILi = 0.05
