import numpy as np


def dLiC6_1paramdc(self, y, ybar, muR_ref):
    Omga = self.get_trode_param("Omega_a")
    Omgb = self.get_trode_param("Omega_b")
    dmuRdc = 0.0425/y**1.85 + 111.11111111111111*1/np.cosh(22.22222222222222*(-1. + y))**2 + \
        -  22.5*(1.*Omgb + Omga*(0.32888888888888884 - 0.4444444444444444*y))*1/np.cosh(49.99999999999999*(-0.5 + y))**2 - 0.2*Omga*(1 + np.tanh(49.99999999999999*(-0.5 + y))) +  \
        -  9.*Omga*(-0.4 + y**0.98)*1/np.cosh(20.*(-0.35 + y))**2*(-1. + np.tanh(22.222222222222218*(-0.49 + y))) + \
        -  0.5*(2666.666666666667/np.exp(66.66666666666667*y) + 25.*1/np.cosh(25.*(-0.22 + y))**2 + 37.5*1/np.cosh(50.*(-0.17 + y))**2)*(1 - np.tanh(20.*(-0.35 + y))) +\
        -  9.999999999999996*Omga*(-0.4 + y**0.98)*1/np.cosh(22.222222222222218*(-0.49 + y))**2*(1. + np.tanh(20.*(-0.35 + y))) + \
        -  (0.44099999999999995*Omga*(-1. + np.tanh(22.222222222222218*(-0.49 + y)))*(1. + np.tanh(20.*(-0.35 + y))))/y**0.020000000000000018 - \
        -  10.*1/np.cosh(20.*(-0.35 + y))**2*(-1.75 - 40/np.exp(66.66666666666667*y) + 1.*np.tanh(25.*(-0.22 + y)) + 0.75*np.tanh(50.*(-0.17 + y)))
    return dmuRdc, 1
