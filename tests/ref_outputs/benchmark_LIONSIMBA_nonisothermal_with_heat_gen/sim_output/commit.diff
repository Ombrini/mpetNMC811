diff --git a/mpet/config/configuration.py b/mpet/config/configuration.py
index b5cebed..794cc70 100644
--- a/mpet/config/configuration.py
+++ b/mpet/config/configuration.py
@@ -481,7 +481,6 @@ class Config:
         self['T'] = self['T'] / constants.T_ref
         self['Rser'] = self['Rser'] / self['Rser_ref']
         self['h_h'] = self['h_h'] * self['L_ref'] / self['k_h_ref']
-        self['sigma_l'] = self['sigma_l'] / self['sigma_s_ref']
         if self['Dp'] is not None:
             self['Dp'] = self['Dp'] / self['D_ref']
         if self['Dm'] is not None:
diff --git a/mpet/config/schemas.py b/mpet/config/schemas.py
index 856749a..fa7b6cd 100644
--- a/mpet/config/schemas.py
+++ b/mpet/config/schemas.py
@@ -124,7 +124,6 @@ system = {'Sim Params': {'profileType': lambda x:
                                  Optional('k_h_a', default=0.2): Use(float),
                                  Optional('k_h_s', default=0.2): Use(float),
                                  Optional('h_h', default=500): Use(float),
-                                 Optional('sigma_l', default=500): Use(float),
                                  Optional('entropy_heat_gen', default=False): Use(tobool)},
           'Electrolyte': {'c0': Use(float),
                           'zp': Use(int),
diff --git a/mpet/mod_cell.py b/mpet/mod_cell.py
index baf81b2..c85979a 100644
--- a/mpet/mod_cell.py
+++ b/mpet/mod_cell.py
@@ -607,7 +607,13 @@ def get_ohmic_heat(c_lyte, T_lyte, phi_lyte, phi_bulk, disc, config, Nvol):
     q_ohmic = 0
 
     if config["elyteModelType"] == "dilute":
-        sigma_l = eps_o_tau[1:-1] * config["sigma_l"]
+        zp, zm, nup, num = config["zp"], config["zm"], config["nup"], config["num"]
+
+        # Get porosity at cell edges using weighted harmonic mean
+        Dp = eps_o_tau[1:-1] * config["Dp"]
+        Dm = eps_o_tau[1:-1] * config["Dm"]
+        sigma_l = ((nup*zp*Dp + num*zm*Dm)*np.diff(c_edges_int)/dx) - (nup*zp
+                       ** 2*Dp + num*zm**2*Dm)/T_mid*c_mid
     elif config["elyteModelType"] == "SM":
         SMset = config["SMset"]
         elyte_function = utils.import_function(config["SMset_filename"], SMset,
diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
index f72bdc0..5c29169 100644
--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
+++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
@@ -16,6 +16,7 @@ relTol = 1e-6
 absTol = 1e-6
 T = 323
 randomSeed = false
+nonisothermal = true
 seed = 0
 Rser = 0.
 Nvol_c = 10
@@ -74,7 +75,6 @@ h_h = 10
 k_h_c = 2.1
 k_h_a = 1.7
 k_h_s = 0.16
-sigma_l = 500
 entropy_heat_gen = False
 
 [Electrolyte]
diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
index 8b13789..d8e49fc 100644
--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
+++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
@@ -1 +1,418 @@
+diff --git a/mpet/config/configuration.py b/mpet/config/configuration.py
+index b5cebed..794cc70 100644
+--- a/mpet/config/configuration.py
++++ b/mpet/config/configuration.py
+@@ -481,7 +481,6 @@ class Config:
+         self['T'] = self['T'] / constants.T_ref
+         self['Rser'] = self['Rser'] / self['Rser_ref']
+         self['h_h'] = self['h_h'] * self['L_ref'] / self['k_h_ref']
+-        self['sigma_l'] = self['sigma_l'] / self['sigma_s_ref']
+         if self['Dp'] is not None:
+             self['Dp'] = self['Dp'] / self['D_ref']
+         if self['Dm'] is not None:
+diff --git a/mpet/config/schemas.py b/mpet/config/schemas.py
+index 856749a..994875f 100644
+--- a/mpet/config/schemas.py
++++ b/mpet/config/schemas.py
+@@ -114,17 +114,16 @@ system = {'Sim Params': {'profileType': lambda x:
+                        'BruggExp_c': Use(float),
+                        'BruggExp_a': Use(float),
+                        'BruggExp_s': Use(float)},
+-          'Thermal Parameters': {Optional('cp_c', default=1e8): Use(float),
+-                                 Optional('cp_a', default=1e8): Use(float),
+-                                 Optional('cp_s', default=1e8): Use(float),
+-                                 Optional('rhom_c', default=0.2): Use(float),
+-                                 Optional('rhom_a', default=0.2): Use(float),
+-                                 Optional('rhom_s', default=0.2): Use(float),
+-                                 Optional('k_h_c', default=0.2): Use(float),
+-                                 Optional('k_h_a', default=0.2): Use(float),
+-                                 Optional('k_h_s', default=0.2): Use(float),
+-                                 Optional('h_h', default=500): Use(float),
+-                                 Optional('sigma_l', default=500): Use(float),
++          'Thermal Parameters': {Optional('cp_c', default=0): Use(float),
++                                 Optional('cp_a', default=0): Use(float),
++                                 Optional('cp_s', default=0): Use(float),
++                                 Optional('rhom_c', default=0): Use(float),
++                                 Optional('rhom_a', default=0): Use(float),
++                                 Optional('rhom_s', default=0): Use(float),
++                                 Optional('k_h_c', default=0): Use(float),
++                                 Optional('k_h_a', default=0): Use(float),
++                                 Optional('k_h_s', default=0): Use(float),
++                                 Optional('h_h', default=0): Use(float),
+                                  Optional('entropy_heat_gen', default=False): Use(tobool)},
+           'Electrolyte': {'c0': Use(float),
+                           'zp': Use(int),
+diff --git a/mpet/mod_cell.py b/mpet/mod_cell.py
+index baf81b2..8644a95 100644
+--- a/mpet/mod_cell.py
++++ b/mpet/mod_cell.py
+@@ -607,7 +607,21 @@ def get_ohmic_heat(c_lyte, T_lyte, phi_lyte, phi_bulk, disc, config, Nvol):
+     q_ohmic = 0
+ 
+     if config["elyteModelType"] == "dilute":
+-        sigma_l = eps_o_tau[1:-1] * config["sigma_l"]
++        zp, zm, nup, num = config["zp"], config["zm"], config["nup"], config["num"]
++        dxd1 = disc["dxd1"]
++        eps_o_tau = disc["eps_o_tau"]
++
++        # Get concentration at cell edges using weighted mean
++        wt = utils.pad_vec(disc["dxvec"])
++        c_edges_int = utils.weighted_linear_mean(c_lyte, wt)
++        T_edges_int = utils.weighted_linear_mean(T_lyte, wt)
++
++        # Get porosity at cell edges using weighted harmonic mean
++        eps_o_tau_edges = utils.weighted_linear_mean(eps_o_tau, wt)
++        Dp = eps_o_tau_edges * config["Dp"]
++        Dm = eps_o_tau_edges * config["Dm"] 
++        sigma_l = ((nup*zp*Dp + num*zm*Dm)*np.diff(c_lyte)/dxd1) - (nup*zp
++                       ** 2*Dp + num*zm**2*Dm)/T_edges_int*c_edges_int
+     elif config["elyteModelType"] == "SM":
+         SMset = config["SMset"]
+         elyte_function = utils.import_function(config["SMset_filename"], SMset,
+diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
+index f72bdc0..5c29169 100644
+--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
+@@ -16,6 +16,7 @@ relTol = 1e-6
+ absTol = 1e-6
+ T = 323
+ randomSeed = false
++nonisothermal = true
+ seed = 0
+ Rser = 0.
+ Nvol_c = 10
+@@ -74,7 +75,6 @@ h_h = 10
+ k_h_c = 2.1
+ k_h_a = 1.7
+ k_h_s = 0.16
+-sigma_l = 500
+ entropy_heat_gen = False
+ 
+ [Electrolyte]
+diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
+index 8b13789..706c81d 100644
+--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
+@@ -1 +1,268 @@
++diff --git a/mpet/config/configuration.py b/mpet/config/configuration.py
++index b5cebed..cda04bf 100644
++--- a/mpet/config/configuration.py
+++++ b/mpet/config/configuration.py
++@@ -481,7 +481,10 @@ class Config:
++         self['T'] = self['T'] / constants.T_ref
++         self['Rser'] = self['Rser'] / self['Rser_ref']
++         self['h_h'] = self['h_h'] * self['L_ref'] / self['k_h_ref']
++-        self['sigma_l'] = self['sigma_l'] / self['sigma_s_ref']
+++        #if self['nonisothermal']:
+++        #     if self['h_h'] == 0:
+++        #        raise Exception("Please provide all nonisothermal parameters for " + trode + " and ensure they are nonzero")
+++
++         if self['Dp'] is not None:
++             self['Dp'] = self['Dp'] / self['D_ref']
++         if self['Dm'] is not None:
++@@ -511,6 +514,10 @@ class Config:
++             self['cp'][trode] = self['cp'][trode] / \
++                 (self['k_h_ref'] * self['t_ref'] / (self['rho_ref']*self['L_ref']**2))
++             self['rhom'][trode] = self['rhom'][trode] / self['rho_ref']
+++            #if self['nonisothermal']:
+++            #    if self['k_h'][trode] == 0 or self['cp'][trode] == 0 or self['rhom'][trode] == 0:
+++            #        raise Exception("Please provide all nonisothermal parameters for " + trode + " and ensure they are nonzero")
+++
++ 
++             if self[trode, 'lambda'] is not None:
++                 self[trode, 'lambda'] = self[trode, 'lambda'] / kT
++@@ -528,6 +535,10 @@ class Config:
++             self['cp']['s'] = self['cp']['s'] / \
++                 (self['k_h_ref'] * self['t_ref'] / (self['rho_ref']*self['L_ref']**2))
++             self['rhom']['s'] = self['rhom']['s'] / self['rho_ref']
+++            #if self['nonisothermal']:
+++            #    if self['rhom']['s'] == 0 or self['cp']['s'] == 0 or self['rhom']['s'] == 0:
+++            #        raise Exception("Please provide all nonisothermal parameters for the separator and ensure they are nonzero")
+++
++ 
++     def _scale_macroscopic_parameters(self, Vref):
++         """
++diff --git a/mpet/config/schemas.py b/mpet/config/schemas.py
++index 856749a..994875f 100644
++--- a/mpet/config/schemas.py
+++++ b/mpet/config/schemas.py
++@@ -114,17 +114,16 @@ system = {'Sim Params': {'profileType': lambda x:
++                        'BruggExp_c': Use(float),
++                        'BruggExp_a': Use(float),
++                        'BruggExp_s': Use(float)},
++-          'Thermal Parameters': {Optional('cp_c', default=1e8): Use(float),
++-                                 Optional('cp_a', default=1e8): Use(float),
++-                                 Optional('cp_s', default=1e8): Use(float),
++-                                 Optional('rhom_c', default=0.2): Use(float),
++-                                 Optional('rhom_a', default=0.2): Use(float),
++-                                 Optional('rhom_s', default=0.2): Use(float),
++-                                 Optional('k_h_c', default=0.2): Use(float),
++-                                 Optional('k_h_a', default=0.2): Use(float),
++-                                 Optional('k_h_s', default=0.2): Use(float),
++-                                 Optional('h_h', default=500): Use(float),
++-                                 Optional('sigma_l', default=500): Use(float),
+++          'Thermal Parameters': {Optional('cp_c', default=0): Use(float),
+++                                 Optional('cp_a', default=0): Use(float),
+++                                 Optional('cp_s', default=0): Use(float),
+++                                 Optional('rhom_c', default=0): Use(float),
+++                                 Optional('rhom_a', default=0): Use(float),
+++                                 Optional('rhom_s', default=0): Use(float),
+++                                 Optional('k_h_c', default=0): Use(float),
+++                                 Optional('k_h_a', default=0): Use(float),
+++                                 Optional('k_h_s', default=0): Use(float),
+++                                 Optional('h_h', default=0): Use(float),
++                                  Optional('entropy_heat_gen', default=False): Use(tobool)},
++           'Electrolyte': {'c0': Use(float),
++                           'zp': Use(int),
++diff --git a/mpet/mod_cell.py b/mpet/mod_cell.py
++index baf81b2..8644a95 100644
++--- a/mpet/mod_cell.py
+++++ b/mpet/mod_cell.py
++@@ -607,7 +607,21 @@ def get_ohmic_heat(c_lyte, T_lyte, phi_lyte, phi_bulk, disc, config, Nvol):
++     q_ohmic = 0
++ 
++     if config["elyteModelType"] == "dilute":
++-        sigma_l = eps_o_tau[1:-1] * config["sigma_l"]
+++        zp, zm, nup, num = config["zp"], config["zm"], config["nup"], config["num"]
+++        dxd1 = disc["dxd1"]
+++        eps_o_tau = disc["eps_o_tau"]
+++
+++        # Get concentration at cell edges using weighted mean
+++        wt = utils.pad_vec(disc["dxvec"])
+++        c_edges_int = utils.weighted_linear_mean(c_lyte, wt)
+++        T_edges_int = utils.weighted_linear_mean(T_lyte, wt)
+++
+++        # Get porosity at cell edges using weighted harmonic mean
+++        eps_o_tau_edges = utils.weighted_linear_mean(eps_o_tau, wt)
+++        Dp = eps_o_tau_edges * config["Dp"]
+++        Dm = eps_o_tau_edges * config["Dm"] 
+++        sigma_l = ((nup*zp*Dp + num*zm*Dm)*np.diff(c_lyte)/dxd1) - (nup*zp
+++                       ** 2*Dp + num*zm**2*Dm)/T_edges_int*c_edges_int
++     elif config["elyteModelType"] == "SM":
++         SMset = config["SMset"]
++         elyte_function = utils.import_function(config["SMset_filename"], SMset,
++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
++index f72bdc0..5c29169 100644
++--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
+++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
++@@ -16,6 +16,7 @@ relTol = 1e-6
++ absTol = 1e-6
++ T = 323
++ randomSeed = false
+++nonisothermal = true
++ seed = 0
++ Rser = 0.
++ Nvol_c = 10
++@@ -74,7 +75,6 @@ h_h = 10
++ k_h_c = 2.1
++ k_h_a = 1.7
++ k_h_s = 0.16
++-sigma_l = 500
++ entropy_heat_gen = False
++ 
++ [Electrolyte]
++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
++index 8b13789..c406ea3 100644
++--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
+++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
++@@ -1 +1,92 @@
+++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
+++index f72bdc0..5c29169 100644
+++--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
++++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
+++@@ -16,6 +16,7 @@ relTol = 1e-6
+++ absTol = 1e-6
+++ T = 323
+++ randomSeed = false
++++nonisothermal = true
+++ seed = 0
+++ Rser = 0.
+++ Nvol_c = 10
+++@@ -74,7 +75,6 @@ h_h = 10
+++ k_h_c = 2.1
+++ k_h_a = 1.7
+++ k_h_s = 0.16
+++-sigma_l = 500
+++ entropy_heat_gen = False
+++ 
+++ [Electrolyte]
+++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
+++index 8b13789..76248ff 100644
+++--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
++++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/commit.diff
+++@@ -1 +1,13 @@
++++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
++++index f72bdc0..dfb8777 100644
++++--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
+++++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/params_system.cfg
++++@@ -16,6 +16,7 @@ relTol = 1e-6
++++ absTol = 1e-6
++++ T = 323
++++ randomSeed = false
+++++nonisothermal = true
++++ seed = 0
++++ Rser = 0.
++++ Nvol_c = 10
+++ 
+++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
+++index 5b8dc25..7320f92 100644
+++--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
++++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
+++@@ -10,7 +10,8 @@
+++             "printInfo": "false",
+++             "nodes": {
+++                 "useNodeMemoryPools": "false",
+++-                "deleteNodesThreshold": "1000000"
++++                "deleteNodesThreshold": "1000000",
++++                "significantDecimalsForConstantsHash": "10"
+++             },
+++             "equations": {
+++                 "info": [
+++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p
+++index 4bd86ab..1af2113 100644
+++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p differ
+++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p
+++index 73014a3..da9df05 100644
+++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p differ
+++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p
+++index 9ccd6ef..4b126b3 100644
+++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p differ
+++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p
+++index df48508..fcb64ff 100644
+++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p differ
+++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat
+++index 3689345..9a21ede 100644
+++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat differ
+++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
+++index ad28d23..73fa61f 100644
+++--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
++++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
+++@@ -1,11 +1,11 @@
+++ mpet version:
+++-0.1.7
++++0.1.8
+++ 
+++ branch name:
+++ feature/temperature_effects
+++ 
+++ commit hash:
+++-ad7fe99
++++b4feee4
+++ 
+++ to run, from the root repo directory, copy relevant files there,
+++ edit input_params_system.cfg to point to correct material
+++@@ -14,4 +14,4 @@ $ git checkout [commit hash]
+++ $ patch -p1 < commit.diff:
+++ $ python[3] mpetrun.py input_params_system.cfg
+++ 
+++-Total run time: 0.6181278228759766 s
++++Total run time: 0.6214299201965332 s
++ 
++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
++index 5b8dc25..7320f92 100644
++--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
+++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
++@@ -10,7 +10,8 @@
++             "printInfo": "false",
++             "nodes": {
++                 "useNodeMemoryPools": "false",
++-                "deleteNodesThreshold": "1000000"
+++                "deleteNodesThreshold": "1000000",
+++                "significantDecimalsForConstantsHash": "10"
++             },
++             "equations": {
++                 "info": [
++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p
++index 4bd86ab..8516ece 100644
++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p differ
++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p
++index 73014a3..fdd7046 100644
++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p differ
++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p
++index 9ccd6ef..4b126b3 100644
++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p differ
++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p
++index df48508..b042b1d 100644
++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p differ
++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat
++index 3689345..6c6ae31 100644
++Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat differ
++diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
++index ad28d23..5675ed3 100644
++--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
+++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
++@@ -1,11 +1,11 @@
++ mpet version:
++-0.1.7
+++0.1.8
++ 
++ branch name:
++ feature/temperature_effects
++ 
++ commit hash:
++-ad7fe99
+++b4feee4
++ 
++ to run, from the root repo directory, copy relevant files there,
++ edit input_params_system.cfg to point to correct material
++@@ -14,4 +14,4 @@ $ git checkout [commit hash]
++ $ patch -p1 < commit.diff:
++ $ python[3] mpetrun.py input_params_system.cfg
++ 
++-Total run time: 0.6181278228759766 s
+++Total run time: 0.6859793663024902 s
+ 
+diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
+index 5b8dc25..7320f92 100644
+--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
+@@ -10,7 +10,8 @@
+             "printInfo": "false",
+             "nodes": {
+                 "useNodeMemoryPools": "false",
+-                "deleteNodesThreshold": "1000000"
++                "deleteNodesThreshold": "1000000",
++                "significantDecimalsForConstantsHash": "10"
+             },
+             "equations": {
+                 "info": [
+diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p
+index 4bd86ab..a075d48 100644
+Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p differ
+diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p
+index 73014a3..e831718 100644
+Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p differ
+diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p
+index 9ccd6ef..0ba05e8 100644
+Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p differ
+diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p
+index df48508..2fe54a4 100644
+Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p differ
+diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat
+index 3689345..f858082 100644
+Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat differ
+diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
+index ad28d23..09df22b 100644
+--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
++++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
+@@ -1,11 +1,11 @@
+ mpet version:
+-0.1.7
++0.1.8
+ 
+ branch name:
+ feature/temperature_effects
+ 
+ commit hash:
+-ad7fe99
++b4feee4
+ 
+ to run, from the root repo directory, copy relevant files there,
+ edit input_params_system.cfg to point to correct material
+@@ -14,4 +14,4 @@ $ git checkout [commit hash]
+ $ patch -p1 < commit.diff:
+ $ python[3] mpetrun.py input_params_system.cfg
+ 
+-Total run time: 0.6181278228759766 s
++Total run time: 0.6945881843566895 s
 
diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
index 5b8dc25..7320f92 100644
--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
+++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/daetools_config_options.txt
@@ -10,7 +10,8 @@
             "printInfo": "false",
             "nodes": {
                 "useNodeMemoryPools": "false",
-                "deleteNodesThreshold": "1000000"
+                "deleteNodesThreshold": "1000000",
+                "significantDecimalsForConstantsHash": "10"
             },
             "equations": {
                 "info": [
diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p
index 4bd86ab..fd6b7e2 100644
Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_anode.p differ
diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p
index 73014a3..c2013e4 100644
Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_cathode.p differ
diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p
index 9ccd6ef..0ba05e8 100644
Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_derived_values.p differ
diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p
index df48508..81ca781 100644
Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/input_dict_system.p differ
diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat
index 3689345..3e26338 100644
Binary files a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat and b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/output_data.mat differ
diff --git a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
index ad28d23..80c55f3 100644
--- a/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
+++ b/tests/ref_outputs/benchmark_LIONSIMBA_nonisothermal_with_heat_gen/sim_output/run_info.txt
@@ -1,11 +1,11 @@
 mpet version:
-0.1.7
+0.1.8
 
 branch name:
 feature/temperature_effects
 
 commit hash:
-ad7fe99
+b4feee4
 
 to run, from the root repo directory, copy relevant files there,
 edit input_params_system.cfg to point to correct material
@@ -14,4 +14,4 @@ $ git checkout [commit hash]
 $ patch -p1 < commit.diff:
 $ python[3] mpetrun.py input_params_system.cfg
 
-Total run time: 0.6181278228759766 s
+Total run time: 0.6275632381439209 s

