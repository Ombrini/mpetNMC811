diff --git a/configs/params_graphite_1param.cfg b/configs/params_graphite_1param.cfg
index 861f365..b2cee9a 100644
--- a/configs/params_graphite_1param.cfg
+++ b/configs/params_graphite_1param.cfg
@@ -38,7 +38,7 @@ muRSEI = SEI_early
 rho_SEI = 6.02e28
 n0_SEI = 60
 first_cycle_ratio = 0.9
-R0_SEI = 1
+R0_SEI = 0.001
 vfrac_1 = 0.9
 vfrac_2 = 0.3
 k0_SEI = 5e-9
diff --git a/mpet/config/configuration.py b/mpet/config/configuration.py
index 94453ec..3c070d7 100644
--- a/mpet/config/configuration.py
+++ b/mpet/config/configuration.py
@@ -9,6 +9,7 @@ distributions from input means and standard deviations.
 import os
 import pickle
 
+import mpet.utils as utils
 import numpy as np
 
 from mpet.config import constants
@@ -283,7 +284,7 @@ class Config:
             else:
                 # only update generated distributions
                 if section == 'system':
-                    for key in ['psd_num', 'psd_len', 'psd_area', 'psd_area_SEI',
+                    for key in ['psd_num', 'psd_len', 'psd_area_SEI',
                                 'psd_vol', 'psd_vol_FracVol', 'G']:
                         self[key] = d[key]
                 elif section in ['anode', 'cathode']:
@@ -581,7 +582,6 @@ class Config:
         self['psd_num'] = {}
         self['psd_len'] = {}
         self['psd_area'] = {}
-        self['psd_area_SEI'] = {}
         self['psd_vol'] = {}
         self['psd_vol_FracVol'] = {}
 
@@ -632,15 +632,12 @@ class Config:
             solidShape = self[trode, 'shape']
             if solidShape == 'sphere':
                 psd_area = 4 * np.pi * psd_len**2
-                psd_area_SEI = psd_area
                 psd_vol = (4. / 3) * np.pi * psd_len**3
             elif solidShape == 'C3':
                 psd_area = 2 * 1.2263 * psd_len**2
-                psd_area_SEI = psd_area
                 psd_vol = 1.2263 * psd_len**2 * self[trode, 'thickness']
             elif solidShape == 'cylinder':
                 psd_area = 2 * np.pi * psd_len * self[trode, 'thickness']
-                psd_area_SEI = psd_area + 2 * np.pi * psd_len**2
                 psd_vol = np.pi * psd_len**2 * self[trode, 'thickness']
             else:
                 raise NotImplementedError(f'Unknown solid shape: {solidShape}')
@@ -654,7 +651,6 @@ class Config:
             self['psd_num'][trode] = psd_num
             self['psd_len'][trode] = psd_len
             self['psd_area'][trode] = psd_area
-            self['psd_area_SEI'][trode] = psd_area_SEI
             self['psd_vol'][trode] = psd_vol
             self['psd_vol_FracVol'][trode] = psd_frac_vol
 
@@ -703,7 +699,6 @@ class Config:
                     self[trode, 'indvPart']['N'][i, j] = self['psd_num'][trode][i,j]
                     plen = self['psd_len'][trode][i,j]
                     parea = self['psd_area'][trode][i,j]
-                    parea_SEI = self['psd_area_SEI'][trode][i,j]
                     pvol = self['psd_vol'][trode][i,j]
                     # Define a few reference scales
                     F_s_ref = plen * cs_ref_part / self['t_ref']  # part/(m^2 s)
@@ -729,6 +724,10 @@ class Config:
                     self[trode, 'indvPart']['R0_SEI'][i, j] = self[trode, 'R0_SEI'] \
                         / (constants.k * constants.T_ref / (constants.e * i_s_ref))
                     self[trode, 'indvPart']['delta_L'][i, j] = (parea * plen) / pvol
+                    self[trode, 'indvPart']['ssa'][i, j] = self[trode, 'indvPart']['delta_L'][i, j]
+                    if not self[trode, 'ssa'] == None:
+                        self[trode, 'indvPart']['ssa'][i, j] = self[trode, 'ssa'] * plen * utils.get_density(self[trode, "material_type"]) * 1000
+                        # assuming SEI materials is Li2CO3, which has density rho = 2.26e3kg/m^3
                     # assuming SEI materials is graphite, which has density rho = 2.26e3kg/m^3
                     # n0_SEI from mAh/g to unit/m^3
                     self[trode, 'indvPart']['n0_SEI'][i, j] = self[trode, 'n0_SEI'] * 3600 \
@@ -737,15 +736,16 @@ class Config:
                     if self[trode, 'SEI'] and self[trode, 'n0_SEI'] != 0:
                         # we know the amount of initial SEI--we can set it as a parameter
                         # from mAh/g to particle/g
+                        # primary SEI grows over the entire area and not just the reaction plane
                         self[trode,'indvPart']['L10'][i, j] = \
                             self[trode, 'indvPart']['n0_SEI'][i, j] * \
-                            self[trode,'first_cycle_ratio'] * pvol \
-                            / (self[trode, 'vfrac_1'] * parea_SEI * plen
+                            self[trode,'first_cycle_ratio'] \
+                            / (self[trode, 'vfrac_1'] * self[trode, 'indvPart']['ssa'][i, j]
                                * self[trode, 'indvPart']['c_SEI'][i, j])
                         self[trode,'indvPart']['L20'][i, j] = \
                             self[trode, 'indvPart']['n0_SEI'][i, j] * \
-                            (1-self[trode,'first_cycle_ratio']) * pvol \
-                            / (self[trode, 'vfrac_2'] * parea_SEI * plen
+                            (1-self[trode,'first_cycle_ratio']) \
+                            / (self[trode, 'vfrac_2'] * self[trode, 'indvPart']['ssa'][i, j]
                                * self[trode, 'indvPart']['c_SEI'][i, j])
                     else:
                         # otherwise, set to arbitrary value of 0.1e-9 for both primary and
diff --git a/mpet/config/constants.py b/mpet/config/constants.py
index 0af5c13..a2a14f4 100644
--- a/mpet/config/constants.py
+++ b/mpet/config/constants.py
@@ -25,7 +25,7 @@ PARAMS_PER_TRODE = ['Nvol', 'Npart', 'mean', 'stddev', 'cs0', 'simBulkCond', 'si
 PARAMS_SEPARATOR = ['Nvol', 'L', 'poros', 'BruggExp']
 #: parameters that are defined for each particle, and their type
 PARAMS_PARTICLE = {'N': int, 'kappa': float,'beta_s': float, 'D': float,'k0': float,
-                   'Rfilm': float, 'R0_SEI': float, 'delta_L': float, 'Omega_a': float,
-                   'E_D': float,'E_A': float, 'k0_SEI': float, 'zeta': float,
-                   'eta_p': float, 'L10': float, 'L20': float, 'n0_SEI': float,
-                   'c_SEI': float}
+                   'Rfilm': float, 'R0_SEI': float, 'delta_L': float, 'ssa': float,
+                   'Omega_a': float, 'E_D': float,'E_A': float, 'k0_SEI': float,
+                   'zeta': float, 'eta_p': float, 'L10': float, 'L20': float,
+                   'n0_SEI': float, 'c_SEI': float}
diff --git a/mpet/config/schemas.py b/mpet/config/schemas.py
index bfd9d55..1c00e13 100644
--- a/mpet/config/schemas.py
+++ b/mpet/config/schemas.py
@@ -136,6 +136,7 @@ electrode = {'Particles': {'type': lambda x: check_allowed_values(x,
                                check_allowed_values(x, ["C3", "sphere", "cylinder", "homog_sdn"]),
                            Optional('thickness'): Use(float)},
              'Material': {'muRfunc': str,
+                          Optional('material_type', default='LiC6'): str,
                           'logPad': Use(tobool),
                           'noise': Use(tobool),
                           'noise_prefac': Use(float),
@@ -162,6 +163,7 @@ electrode = {'Particles': {'type': lambda x: check_allowed_values(x,
                              Optional('muRSEI', default="SEI_early"): str,
                              Optional('rho_SEI', default=6.02e28): Use(float),
                              Optional('n0_SEI', default=0): Use(float),
+                             Optional('ssa', default=None): Use(float),
                              Optional('first_cycle_ratio', default=0.9): Use(float),
                              Optional('vfrac_1', default=0.9): Use(float),
                              Optional('vfrac_2', default=0.3): Use(float),
diff --git a/mpet/mod_cell.py b/mpet/mod_cell.py
index af4c0a7..984d179 100644
--- a/mpet/mod_cell.py
+++ b/mpet/mod_cell.py
@@ -215,7 +215,7 @@ class ModCell(dae.daeModel):
                               * self.particles[trode][vInd,pInd].particles_SEI.dcSEIbardt())
                     # Equation 96 in paper
 
-                eq1.Residual = self.R_Vp[trode](vInd) - RHS1 - self.R_no_deg_Vp[trode](vInd)
+                eq1.Residual = self.R_Vp[trode](vInd) - RHS1 - RHS2
                 eq2.Residual = self.R_no_deg_Vp[trode](vInd) - RHS2
 
         # Define output port variables
diff --git a/mpet/utils.py b/mpet/utils.py
index 311344a..fba1515 100644
--- a/mpet/utils.py
+++ b/mpet/utils.py
@@ -140,3 +140,16 @@ def get_dict_key(data, string, squeeze=True, final=False):
         return np.squeeze(data[string][...])
     else:  # returns entire array
         return data[string][...]
+
+
+def get_density(material_type):
+    """Gets active material density from input material type, in units of kg/m^3"""
+    if material_type == "LMO":  # cathode, so do LiMn2O4
+        return 4.01e3
+    elif material_type == "LiC6":
+        return 2.26e3  # anode, so do graphite
+    elif material_type == "NCA":
+        return 4.45e3
+    elif material_type == "LFP":
+        return 3.6e3
+        # https://cdn.intechopen.com/pdfs/18671/InTech-Lifepo4_cathode_material.pdf
diff --git a/tests/ref_outputs/test025/params_c.cfg b/tests/ref_outputs/test025/params_c.cfg
index 29e712e..76f04a4 100644
--- a/tests/ref_outputs/test025/params_c.cfg
+++ b/tests/ref_outputs/test025/params_c.cfg
@@ -35,9 +35,10 @@ Rfilm = 0e-0
 SEI = True
 muRSEI = SEI_early
 rho_SEI = 6.02e28
-#n0_SEI = 5
+n0_SEI = 60
+ssa = 200
 first_cycle_ratio = 0.9
-#R0_SEI = 0.001
+R0_SEI = 0.001
 vfrac_1 = 0.9
 vfrac_2 = 0.3
 k0_SEI = 5e-6
diff --git a/tests/ref_outputs/test025/params_system.cfg b/tests/ref_outputs/test025/params_system.cfg
index 4c68e2f..93be796 100644
--- a/tests/ref_outputs/test025/params_system.cfg
+++ b/tests/ref_outputs/test025/params_system.cfg
@@ -11,8 +11,8 @@ segments = [
 prevDir = false
 tend = 8e4
 tsteps = 40
-relTol = 1e-10
-absTol = 1e-10
+relTol = 1e-12
+absTol = 1e-12
 T = 298
 randomSeed = false
 seed = 0
diff --git a/tests/ref_outputs/test025/sim_output/commit.diff b/tests/ref_outputs/test025/sim_output/commit.diff
index 03b427e..1e62c32 100644
--- a/tests/ref_outputs/test025/sim_output/commit.diff
+++ b/tests/ref_outputs/test025/sim_output/commit.diff
@@ -11,6 +11,135 @@ index 861f365..b2cee9a 100644
  vfrac_1 = 0.9
  vfrac_2 = 0.3
  k0_SEI = 5e-9
+diff --git a/mpet/config/configuration.py b/mpet/config/configuration.py
+index 94453ec..3c070d7 100644
+--- a/mpet/config/configuration.py
++++ b/mpet/config/configuration.py
+@@ -9,6 +9,7 @@ distributions from input means and standard deviations.
+ import os
+ import pickle
+ 
++import mpet.utils as utils
+ import numpy as np
+ 
+ from mpet.config import constants
+@@ -283,7 +284,7 @@ class Config:
+             else:
+                 # only update generated distributions
+                 if section == 'system':
+-                    for key in ['psd_num', 'psd_len', 'psd_area', 'psd_area_SEI',
++                    for key in ['psd_num', 'psd_len', 'psd_area_SEI',
+                                 'psd_vol', 'psd_vol_FracVol', 'G']:
+                         self[key] = d[key]
+                 elif section in ['anode', 'cathode']:
+@@ -581,7 +582,6 @@ class Config:
+         self['psd_num'] = {}
+         self['psd_len'] = {}
+         self['psd_area'] = {}
+-        self['psd_area_SEI'] = {}
+         self['psd_vol'] = {}
+         self['psd_vol_FracVol'] = {}
+ 
+@@ -632,15 +632,12 @@ class Config:
+             solidShape = self[trode, 'shape']
+             if solidShape == 'sphere':
+                 psd_area = 4 * np.pi * psd_len**2
+-                psd_area_SEI = psd_area
+                 psd_vol = (4. / 3) * np.pi * psd_len**3
+             elif solidShape == 'C3':
+                 psd_area = 2 * 1.2263 * psd_len**2
+-                psd_area_SEI = psd_area
+                 psd_vol = 1.2263 * psd_len**2 * self[trode, 'thickness']
+             elif solidShape == 'cylinder':
+                 psd_area = 2 * np.pi * psd_len * self[trode, 'thickness']
+-                psd_area_SEI = psd_area + 2 * np.pi * psd_len**2
+                 psd_vol = np.pi * psd_len**2 * self[trode, 'thickness']
+             else:
+                 raise NotImplementedError(f'Unknown solid shape: {solidShape}')
+@@ -654,7 +651,6 @@ class Config:
+             self['psd_num'][trode] = psd_num
+             self['psd_len'][trode] = psd_len
+             self['psd_area'][trode] = psd_area
+-            self['psd_area_SEI'][trode] = psd_area_SEI
+             self['psd_vol'][trode] = psd_vol
+             self['psd_vol_FracVol'][trode] = psd_frac_vol
+ 
+@@ -703,7 +699,6 @@ class Config:
+                     self[trode, 'indvPart']['N'][i, j] = self['psd_num'][trode][i,j]
+                     plen = self['psd_len'][trode][i,j]
+                     parea = self['psd_area'][trode][i,j]
+-                    parea_SEI = self['psd_area_SEI'][trode][i,j]
+                     pvol = self['psd_vol'][trode][i,j]
+                     # Define a few reference scales
+                     F_s_ref = plen * cs_ref_part / self['t_ref']  # part/(m^2 s)
+@@ -729,6 +724,10 @@ class Config:
+                     self[trode, 'indvPart']['R0_SEI'][i, j] = self[trode, 'R0_SEI'] \
+                         / (constants.k * constants.T_ref / (constants.e * i_s_ref))
+                     self[trode, 'indvPart']['delta_L'][i, j] = (parea * plen) / pvol
++                    self[trode, 'indvPart']['ssa'][i, j] = self[trode, 'indvPart']['delta_L'][i, j]
++                    if not self[trode, 'ssa'] == None:
++                        self[trode, 'indvPart']['ssa'][i, j] = self[trode, 'ssa'] * plen * utils.get_density(self[trode, "material_type"]) * 1000
++                        # assuming SEI materials is Li2CO3, which has density rho = 2.26e3kg/m^3
+                     # assuming SEI materials is graphite, which has density rho = 2.26e3kg/m^3
+                     # n0_SEI from mAh/g to unit/m^3
+                     self[trode, 'indvPart']['n0_SEI'][i, j] = self[trode, 'n0_SEI'] * 3600 \
+@@ -737,15 +736,16 @@ class Config:
+                     if self[trode, 'SEI'] and self[trode, 'n0_SEI'] != 0:
+                         # we know the amount of initial SEI--we can set it as a parameter
+                         # from mAh/g to particle/g
++                        # primary SEI grows over the entire area and not just the reaction plane
+                         self[trode,'indvPart']['L10'][i, j] = \
+                             self[trode, 'indvPart']['n0_SEI'][i, j] * \
+-                            self[trode,'first_cycle_ratio'] * pvol \
+-                            / (self[trode, 'vfrac_1'] * parea_SEI * plen
++                            self[trode,'first_cycle_ratio'] \
++                            / (self[trode, 'vfrac_1'] * self[trode, 'indvPart']['ssa'][i, j]
+                                * self[trode, 'indvPart']['c_SEI'][i, j])
+                         self[trode,'indvPart']['L20'][i, j] = \
+                             self[trode, 'indvPart']['n0_SEI'][i, j] * \
+-                            (1-self[trode,'first_cycle_ratio']) * pvol \
+-                            / (self[trode, 'vfrac_2'] * parea_SEI * plen
++                            (1-self[trode,'first_cycle_ratio']) \
++                            / (self[trode, 'vfrac_2'] * self[trode, 'indvPart']['ssa'][i, j]
+                                * self[trode, 'indvPart']['c_SEI'][i, j])
+                     else:
+                         # otherwise, set to arbitrary value of 0.1e-9 for both primary and
+diff --git a/mpet/config/constants.py b/mpet/config/constants.py
+index 0af5c13..a2a14f4 100644
+--- a/mpet/config/constants.py
++++ b/mpet/config/constants.py
+@@ -25,7 +25,7 @@ PARAMS_PER_TRODE = ['Nvol', 'Npart', 'mean', 'stddev', 'cs0', 'simBulkCond', 'si
+ PARAMS_SEPARATOR = ['Nvol', 'L', 'poros', 'BruggExp']
+ #: parameters that are defined for each particle, and their type
+ PARAMS_PARTICLE = {'N': int, 'kappa': float,'beta_s': float, 'D': float,'k0': float,
+-                   'Rfilm': float, 'R0_SEI': float, 'delta_L': float, 'Omega_a': float,
+-                   'E_D': float,'E_A': float, 'k0_SEI': float, 'zeta': float,
+-                   'eta_p': float, 'L10': float, 'L20': float, 'n0_SEI': float,
+-                   'c_SEI': float}
++                   'Rfilm': float, 'R0_SEI': float, 'delta_L': float, 'ssa': float,
++                   'Omega_a': float, 'E_D': float,'E_A': float, 'k0_SEI': float,
++                   'zeta': float, 'eta_p': float, 'L10': float, 'L20': float,
++                   'n0_SEI': float, 'c_SEI': float}
+diff --git a/mpet/config/schemas.py b/mpet/config/schemas.py
+index bfd9d55..1c00e13 100644
+--- a/mpet/config/schemas.py
++++ b/mpet/config/schemas.py
+@@ -136,6 +136,7 @@ electrode = {'Particles': {'type': lambda x: check_allowed_values(x,
+                                check_allowed_values(x, ["C3", "sphere", "cylinder", "homog_sdn"]),
+                            Optional('thickness'): Use(float)},
+              'Material': {'muRfunc': str,
++                          Optional('material_type', default='LiC6'): str,
+                           'logPad': Use(tobool),
+                           'noise': Use(tobool),
+                           'noise_prefac': Use(float),
+@@ -162,6 +163,7 @@ electrode = {'Particles': {'type': lambda x: check_allowed_values(x,
+                              Optional('muRSEI', default="SEI_early"): str,
+                              Optional('rho_SEI', default=6.02e28): Use(float),
+                              Optional('n0_SEI', default=0): Use(float),
++                             Optional('ssa', default=None): Use(float),
+                              Optional('first_cycle_ratio', default=0.9): Use(float),
+                              Optional('vfrac_1', default=0.9): Use(float),
+                              Optional('vfrac_2', default=0.3): Use(float),
 diff --git a/mpet/mod_cell.py b/mpet/mod_cell.py
 index af4c0a7..984d179 100644
 --- a/mpet/mod_cell.py
@@ -24,449 +153,722 @@ index af4c0a7..984d179 100644
                  eq2.Residual = self.R_no_deg_Vp[trode](vInd) - RHS2
  
          # Define output port variables
+diff --git a/mpet/utils.py b/mpet/utils.py
+index 311344a..fba1515 100644
+--- a/mpet/utils.py
++++ b/mpet/utils.py
+@@ -140,3 +140,16 @@ def get_dict_key(data, string, squeeze=True, final=False):
+         return np.squeeze(data[string][...])
+     else:  # returns entire array
+         return data[string][...]
++
++
++def get_density(material_type):
++    """Gets active material density from input material type, in units of kg/m^3"""
++    if material_type == "LMO":  # cathode, so do LiMn2O4
++        return 4.01e3
++    elif material_type == "LiC6":
++        return 2.26e3  # anode, so do graphite
++    elif material_type == "NCA":
++        return 4.45e3
++    elif material_type == "LFP":
++        return 3.6e3
++        # https://cdn.intechopen.com/pdfs/18671/InTech-Lifepo4_cathode_material.pdf
 diff --git a/tests/ref_outputs/test025/params_c.cfg b/tests/ref_outputs/test025/params_c.cfg
-index b0af020..29e712e 100644
+index 29e712e..76f04a4 100644
 --- a/tests/ref_outputs/test025/params_c.cfg
 +++ b/tests/ref_outputs/test025/params_c.cfg
-@@ -35,12 +35,12 @@ Rfilm = 0e-0
+@@ -35,9 +35,10 @@ Rfilm = 0e-0
  SEI = True
  muRSEI = SEI_early
  rho_SEI = 6.02e28
--n0_SEI = 60
-+#n0_SEI = 5
+-#n0_SEI = 5
++n0_SEI = 60
++ssa = 200
  first_cycle_ratio = 0.9
--R0_SEI = 0.001
-+#R0_SEI = 0.001
+-#R0_SEI = 0.001
++R0_SEI = 0.001
  vfrac_1 = 0.9
  vfrac_2 = 0.3
--k0_SEI = 5e-9
--alpha_SEI = 0
-+k0_SEI = 5e-6
-+alpha_SEI = 0.5
- zeta = 10e-9
--eta_p = 0.2
-+eta_p = 0.02
+ k0_SEI = 5e-6
 diff --git a/tests/ref_outputs/test025/params_system.cfg b/tests/ref_outputs/test025/params_system.cfg
-index 07d79b3..4c68e2f 100644
+index 4c68e2f..d977c00 100644
 --- a/tests/ref_outputs/test025/params_system.cfg
 +++ b/tests/ref_outputs/test025/params_system.cfg
 @@ -11,8 +11,8 @@ segments = [
  prevDir = false
  tend = 8e4
  tsteps = 40
--relTol = 1e-8
--absTol = 1e-8
-+relTol = 1e-10
-+absTol = 1e-10
+-relTol = 1e-10
+-absTol = 1e-10
++relTol = 1e-8
++absTol = 1e-8
  T = 298
  randomSeed = false
  seed = 0
-@@ -22,7 +22,7 @@ Nvol_c = 1
- Nvol_s = 0
- Nvol_a = 0
- Npart_c = 1
--Npart_a = 2
-+Npart_a = 1
- 
- [Electrodes]
- cathode = params_c.cfg
 diff --git a/tests/ref_outputs/test025/sim_output/commit.diff b/tests/ref_outputs/test025/sim_output/commit.diff
-index 3e9d55f..e24a6d7 100644
+index 03b427e..f4624f1 100644
 --- a/tests/ref_outputs/test025/sim_output/commit.diff
 +++ b/tests/ref_outputs/test025/sim_output/commit.diff
-@@ -11,95 +11,348 @@ index 861f365..b2cee9a 100644
+@@ -11,6 +11,135 @@ index 861f365..b2cee9a 100644
   vfrac_1 = 0.9
   vfrac_2 = 0.3
   k0_SEI = 5e-9
-+diff --git a/mpet/mod_cell.py b/mpet/mod_cell.py
-+index af4c0a7..984d179 100644
-+--- a/mpet/mod_cell.py
-++++ b/mpet/mod_cell.py
-+@@ -215,7 +215,7 @@ class ModCell(dae.daeModel):
-+                               * self.particles[trode][vInd,pInd].particles_SEI.dcSEIbardt())
-+                     # Equation 96 in paper
++diff --git a/mpet/config/configuration.py b/mpet/config/configuration.py
++index 94453ec..3c070d7 100644
++--- a/mpet/config/configuration.py
+++++ b/mpet/config/configuration.py
++@@ -9,6 +9,7 @@ distributions from input means and standard deviations.
++ import os
++ import pickle
++ 
+++import mpet.utils as utils
++ import numpy as np
++ 
++ from mpet.config import constants
++@@ -283,7 +284,7 @@ class Config:
++             else:
++                 # only update generated distributions
++                 if section == 'system':
++-                    for key in ['psd_num', 'psd_len', 'psd_area', 'psd_area_SEI',
+++                    for key in ['psd_num', 'psd_len', 'psd_area_SEI',
++                                 'psd_vol', 'psd_vol_FracVol', 'G']:
++                         self[key] = d[key]
++                 elif section in ['anode', 'cathode']:
++@@ -581,7 +582,6 @@ class Config:
++         self['psd_num'] = {}
++         self['psd_len'] = {}
++         self['psd_area'] = {}
++-        self['psd_area_SEI'] = {}
++         self['psd_vol'] = {}
++         self['psd_vol_FracVol'] = {}
 + 
-+-                eq1.Residual = self.R_Vp[trode](vInd) - RHS1 - self.R_no_deg_Vp[trode](vInd)
-++                eq1.Residual = self.R_Vp[trode](vInd) - RHS1 - RHS2
-+                 eq2.Residual = self.R_no_deg_Vp[trode](vInd) - RHS2
++@@ -632,15 +632,12 @@ class Config:
++             solidShape = self[trode, 'shape']
++             if solidShape == 'sphere':
++                 psd_area = 4 * np.pi * psd_len**2
++-                psd_area_SEI = psd_area
++                 psd_vol = (4. / 3) * np.pi * psd_len**3
++             elif solidShape == 'C3':
++                 psd_area = 2 * 1.2263 * psd_len**2
++-                psd_area_SEI = psd_area
++                 psd_vol = 1.2263 * psd_len**2 * self[trode, 'thickness']
++             elif solidShape == 'cylinder':
++                 psd_area = 2 * np.pi * psd_len * self[trode, 'thickness']
++-                psd_area_SEI = psd_area + 2 * np.pi * psd_len**2
++                 psd_vol = np.pi * psd_len**2 * self[trode, 'thickness']
++             else:
++                 raise NotImplementedError(f'Unknown solid shape: {solidShape}')
++@@ -654,7 +651,6 @@ class Config:
++             self['psd_num'][trode] = psd_num
++             self['psd_len'][trode] = psd_len
++             self['psd_area'][trode] = psd_area
++-            self['psd_area_SEI'][trode] = psd_area_SEI
++             self['psd_vol'][trode] = psd_vol
++             self['psd_vol_FracVol'][trode] = psd_frac_vol
 + 
-+         # Define output port variables
++@@ -703,7 +699,6 @@ class Config:
++                     self[trode, 'indvPart']['N'][i, j] = self['psd_num'][trode][i,j]
++                     plen = self['psd_len'][trode][i,j]
++                     parea = self['psd_area'][trode][i,j]
++-                    parea_SEI = self['psd_area_SEI'][trode][i,j]
++                     pvol = self['psd_vol'][trode][i,j]
++                     # Define a few reference scales
++                     F_s_ref = plen * cs_ref_part / self['t_ref']  # part/(m^2 s)
++@@ -729,6 +724,10 @@ class Config:
++                     self[trode, 'indvPart']['R0_SEI'][i, j] = self[trode, 'R0_SEI'] \
++                         / (constants.k * constants.T_ref / (constants.e * i_s_ref))
++                     self[trode, 'indvPart']['delta_L'][i, j] = (parea * plen) / pvol
+++                    self[trode, 'indvPart']['ssa'][i, j] = self[trode, 'indvPart']['delta_L'][i, j]
+++                    if not self[trode, 'ssa'] == None:
+++                        self[trode, 'indvPart']['ssa'][i, j] = self[trode, 'ssa'] * plen * utils.get_density(self[trode, "material_type"]) * 1000
+++                        # assuming SEI materials is Li2CO3, which has density rho = 2.26e3kg/m^3
++                     # assuming SEI materials is graphite, which has density rho = 2.26e3kg/m^3
++                     # n0_SEI from mAh/g to unit/m^3
++                     self[trode, 'indvPart']['n0_SEI'][i, j] = self[trode, 'n0_SEI'] * 3600 \
++@@ -737,15 +736,16 @@ class Config:
++                     if self[trode, 'SEI'] and self[trode, 'n0_SEI'] != 0:
++                         # we know the amount of initial SEI--we can set it as a parameter
++                         # from mAh/g to particle/g
+++                        # primary SEI grows over the entire area and not just the reaction plane
++                         self[trode,'indvPart']['L10'][i, j] = \
++                             self[trode, 'indvPart']['n0_SEI'][i, j] * \
++-                            self[trode,'first_cycle_ratio'] * pvol \
++-                            / (self[trode, 'vfrac_1'] * parea_SEI * plen
+++                            self[trode,'first_cycle_ratio'] \
+++                            / (self[trode, 'vfrac_1'] * self[trode, 'indvPart']['ssa'][i, j]
++                                * self[trode, 'indvPart']['c_SEI'][i, j])
++                         self[trode,'indvPart']['L20'][i, j] = \
++                             self[trode, 'indvPart']['n0_SEI'][i, j] * \
++-                            (1-self[trode,'first_cycle_ratio']) * pvol \
++-                            / (self[trode, 'vfrac_2'] * parea_SEI * plen
+++                            (1-self[trode,'first_cycle_ratio']) \
+++                            / (self[trode, 'vfrac_2'] * self[trode, 'indvPart']['ssa'][i, j]
++                                * self[trode, 'indvPart']['c_SEI'][i, j])
++                     else:
++                         # otherwise, set to arbitrary value of 0.1e-9 for both primary and
++diff --git a/mpet/config/constants.py b/mpet/config/constants.py
++index 0af5c13..a2a14f4 100644
++--- a/mpet/config/constants.py
+++++ b/mpet/config/constants.py
++@@ -25,7 +25,7 @@ PARAMS_PER_TRODE = ['Nvol', 'Npart', 'mean', 'stddev', 'cs0', 'simBulkCond', 'si
++ PARAMS_SEPARATOR = ['Nvol', 'L', 'poros', 'BruggExp']
++ #: parameters that are defined for each particle, and their type
++ PARAMS_PARTICLE = {'N': int, 'kappa': float,'beta_s': float, 'D': float,'k0': float,
++-                   'Rfilm': float, 'R0_SEI': float, 'delta_L': float, 'Omega_a': float,
++-                   'E_D': float,'E_A': float, 'k0_SEI': float, 'zeta': float,
++-                   'eta_p': float, 'L10': float, 'L20': float, 'n0_SEI': float,
++-                   'c_SEI': float}
+++                   'Rfilm': float, 'R0_SEI': float, 'delta_L': float, 'ssa': float,
+++                   'Omega_a': float, 'E_D': float,'E_A': float, 'k0_SEI': float,
+++                   'zeta': float, 'eta_p': float, 'L10': float, 'L20': float,
+++                   'n0_SEI': float, 'c_SEI': float}
++diff --git a/mpet/config/schemas.py b/mpet/config/schemas.py
++index bfd9d55..1c00e13 100644
++--- a/mpet/config/schemas.py
+++++ b/mpet/config/schemas.py
++@@ -136,6 +136,7 @@ electrode = {'Particles': {'type': lambda x: check_allowed_values(x,
++                                check_allowed_values(x, ["C3", "sphere", "cylinder", "homog_sdn"]),
++                            Optional('thickness'): Use(float)},
++              'Material': {'muRfunc': str,
+++                          Optional('material_type', default='LiC6'): str,
++                           'logPad': Use(tobool),
++                           'noise': Use(tobool),
++                           'noise_prefac': Use(float),
++@@ -162,6 +163,7 @@ electrode = {'Particles': {'type': lambda x: check_allowed_values(x,
++                              Optional('muRSEI', default="SEI_early"): str,
++                              Optional('rho_SEI', default=6.02e28): Use(float),
++                              Optional('n0_SEI', default=0): Use(float),
+++                             Optional('ssa', default=None): Use(float),
++                              Optional('first_cycle_ratio', default=0.9): Use(float),
++                              Optional('vfrac_1', default=0.9): Use(float),
++                              Optional('vfrac_2', default=0.3): Use(float),
+ diff --git a/mpet/mod_cell.py b/mpet/mod_cell.py
+ index af4c0a7..984d179 100644
+ --- a/mpet/mod_cell.py
+@@ -24,504 +153,42 @@ index af4c0a7..984d179 100644
+                  eq2.Residual = self.R_no_deg_Vp[trode](vInd) - RHS2
+  
+          # Define output port variables
++diff --git a/mpet/utils.py b/mpet/utils.py
++index 311344a..fba1515 100644
++--- a/mpet/utils.py
+++++ b/mpet/utils.py
++@@ -140,3 +140,16 @@ def get_dict_key(data, string, squeeze=True, final=False):
++         return np.squeeze(data[string][...])
++     else:  # returns entire array
++         return data[string][...]
+++
+++
+++def get_density(material_type):
+++    """Gets active material density from input material type, in units of kg/m^3"""
+++    if material_type == "LMO":  # cathode, so do LiMn2O4
+++        return 4.01e3
+++    elif material_type == "LiC6":
+++        return 2.26e3  # anode, so do graphite
+++    elif material_type == "NCA":
+++        return 4.45e3
+++    elif material_type == "LFP":
+++        return 3.6e3
+++        # https://cdn.intechopen.com/pdfs/18671/InTech-Lifepo4_cathode_material.pdf
  diff --git a/tests/ref_outputs/test025/params_c.cfg b/tests/ref_outputs/test025/params_c.cfg
--index 96a8480..b0af020 100644
-+index b0af020..29e712e 100644
+-index b0af020..29e712e 100644
++index 29e712e..76f04a4 100644
  --- a/tests/ref_outputs/test025/params_c.cfg
  +++ b/tests/ref_outputs/test025/params_c.cfg
--@@ -35,9 +35,12 @@ Rfilm = 0e-0
-+@@ -35,12 +35,12 @@ Rfilm = 0e-0
+-@@ -35,12 +35,12 @@ Rfilm = 0e-0
++@@ -35,9 +35,10 @@ Rfilm = 0e-0
   SEI = True
   muRSEI = SEI_early
   rho_SEI = 6.02e28
--+n0_SEI = 60
--+first_cycle_ratio = 0.9
--+R0_SEI = 0.001
-+-n0_SEI = 60
-++#n0_SEI = 5
-+ first_cycle_ratio = 0.9
-+-R0_SEI = 0.001
-++#R0_SEI = 0.001
+--n0_SEI = 60
+-+#n0_SEI = 5
++-#n0_SEI = 5
+++n0_SEI = 60
+++ssa = 200
+  first_cycle_ratio = 0.9
+--R0_SEI = 0.001
+-+#R0_SEI = 0.001
++-#R0_SEI = 0.001
+++R0_SEI = 0.001
   vfrac_1 = 0.9
   vfrac_2 = 0.3
---k0_SEI = 5e-5
--+k0_SEI = 5e-9
-- alpha_SEI = 0
-+-k0_SEI = 5e-9
-+-alpha_SEI = 0
-++k0_SEI = 5e-6
-++alpha_SEI = 0.5
-  zeta = 10e-9
-- eta_p = 0.2
-+-eta_p = 0.2
-++eta_p = 0.02
-+diff --git a/tests/ref_outputs/test025/params_system.cfg b/tests/ref_outputs/test025/params_system.cfg
-+index 07d79b3..d977c00 100644
-+--- a/tests/ref_outputs/test025/params_system.cfg
-++++ b/tests/ref_outputs/test025/params_system.cfg
-+@@ -22,7 +22,7 @@ Nvol_c = 1
-+ Nvol_s = 0
-+ Nvol_a = 0
-+ Npart_c = 1
-+-Npart_a = 2
-++Npart_a = 1
-+ 
-+ [Electrodes]
-+ cathode = params_c.cfg
- diff --git a/tests/ref_outputs/test025/sim_output/commit.diff b/tests/ref_outputs/test025/sim_output/commit.diff
--index b4d2d85..0bad94c 100644
-+deleted file mode 100644
-+index 3e9d55f..0000000
- --- a/tests/ref_outputs/test025/sim_output/commit.diff
+--k0_SEI = 5e-9
+--alpha_SEI = 0
+-+k0_SEI = 5e-6
+-+alpha_SEI = 0.5
+- zeta = 10e-9
+--eta_p = 0.2
+-+eta_p = 0.02
+-diff --git a/tests/ref_outputs/test025/params_system.cfg b/tests/ref_outputs/test025/params_system.cfg
+-index 07d79b3..4c68e2f 100644
+---- a/tests/ref_outputs/test025/params_system.cfg
+-+++ b/tests/ref_outputs/test025/params_system.cfg
+-@@ -11,8 +11,8 @@ segments = [
+- prevDir = false
+- tend = 8e4
+- tsteps = 40
+--relTol = 1e-8
+--absTol = 1e-8
+-+relTol = 1e-10
+-+absTol = 1e-10
+- T = 298
+- randomSeed = false
+- seed = 0
+-@@ -22,7 +22,7 @@ Nvol_c = 1
+- Nvol_s = 0
+- Nvol_a = 0
+- Npart_c = 1
+--Npart_a = 2
+-+Npart_a = 1
+- 
+- [Electrodes]
+- cathode = params_c.cfg
+-diff --git a/tests/ref_outputs/test025/sim_output/commit.diff b/tests/ref_outputs/test025/sim_output/commit.diff
+-index 3e9d55f..e24a6d7 100644
+---- a/tests/ref_outputs/test025/sim_output/commit.diff
 -+++ b/tests/ref_outputs/test025/sim_output/commit.diff
--@@ -1,14 +1,14 @@
---diff --git a/tests/ref_outputs/test025/params_system.cfg b/tests/ref_outputs/test025/params_system.cfg
---index 67677fb..07d79b3 100644
------ a/tests/ref_outputs/test025/params_system.cfg
---+++ b/tests/ref_outputs/test025/params_system.cfg
---@@ -10,7 +10,7 @@ segments = [
---             ]
--- prevDir = false
--- tend = 8e4
----tsteps = 2000
---+tsteps = 40
--- relTol = 1e-8
--- absTol = 1e-8
--- T = 298
--+diff --git a/configs/params_graphite_1param.cfg b/configs/params_graphite_1param.cfg
--+index 861f365..b2cee9a 100644
--+--- a/configs/params_graphite_1param.cfg
--++++ b/configs/params_graphite_1param.cfg
--+@@ -38,7 +38,7 @@ muRSEI = SEI_early
--+ rho_SEI = 6.02e28
--+ n0_SEI = 60
+-@@ -11,95 +11,348 @@ index 861f365..b2cee9a 100644
+-  vfrac_1 = 0.9
+-  vfrac_2 = 0.3
+-  k0_SEI = 5e-9
+-+diff --git a/mpet/mod_cell.py b/mpet/mod_cell.py
+-+index af4c0a7..984d179 100644
+-+--- a/mpet/mod_cell.py
+-++++ b/mpet/mod_cell.py
+-+@@ -215,7 +215,7 @@ class ModCell(dae.daeModel):
+-+                               * self.particles[trode][vInd,pInd].particles_SEI.dcSEIbardt())
+-+                     # Equation 96 in paper
+-+ 
+-+-                eq1.Residual = self.R_Vp[trode](vInd) - RHS1 - self.R_no_deg_Vp[trode](vInd)
+-++                eq1.Residual = self.R_Vp[trode](vInd) - RHS1 - RHS2
+-+                 eq2.Residual = self.R_no_deg_Vp[trode](vInd) - RHS2
+-+ 
+-+         # Define output port variables
+- diff --git a/tests/ref_outputs/test025/params_c.cfg b/tests/ref_outputs/test025/params_c.cfg
+--index 96a8480..b0af020 100644
+-+index b0af020..29e712e 100644
+- --- a/tests/ref_outputs/test025/params_c.cfg
+- +++ b/tests/ref_outputs/test025/params_c.cfg
+--@@ -35,9 +35,12 @@ Rfilm = 0e-0
+-+@@ -35,12 +35,12 @@ Rfilm = 0e-0
+-  SEI = True
+-  muRSEI = SEI_early
+-  rho_SEI = 6.02e28
+--+n0_SEI = 60
+--+first_cycle_ratio = 0.9
+--+R0_SEI = 0.001
+-+-n0_SEI = 60
+-++#n0_SEI = 5
 -+ first_cycle_ratio = 0.9
--+-R0_SEI = 1
--++R0_SEI = 0.001
--+ vfrac_1 = 0.9
--+ vfrac_2 = 0.3
--+ k0_SEI = 5e-9
+-+-R0_SEI = 0.001
+-++#R0_SEI = 0.001
+-  vfrac_1 = 0.9
+-  vfrac_2 = 0.3
+---k0_SEI = 5e-5
+--+k0_SEI = 5e-9
+-- alpha_SEI = 0
+-+-k0_SEI = 5e-9
+-+-alpha_SEI = 0
+-++k0_SEI = 5e-6
+-++alpha_SEI = 0.5
+-  zeta = 10e-9
+-- eta_p = 0.2
+-+-eta_p = 0.2
+-++eta_p = 0.02
+-+diff --git a/tests/ref_outputs/test025/params_system.cfg b/tests/ref_outputs/test025/params_system.cfg
+-+index 07d79b3..d977c00 100644
+-+--- a/tests/ref_outputs/test025/params_system.cfg
+-++++ b/tests/ref_outputs/test025/params_system.cfg
+-+@@ -22,7 +22,7 @@ Nvol_c = 1
+-+ Nvol_s = 0
+-+ Nvol_a = 0
+-+ Npart_c = 1
+-+-Npart_a = 2
+-++Npart_a = 1
+-+ 
+-+ [Electrodes]
+-+ cathode = params_c.cfg
+- diff --git a/tests/ref_outputs/test025/sim_output/commit.diff b/tests/ref_outputs/test025/sim_output/commit.diff
+--index b4d2d85..0bad94c 100644
+-+deleted file mode 100644
+-+index 3e9d55f..0000000
+- --- a/tests/ref_outputs/test025/sim_output/commit.diff
+--+++ b/tests/ref_outputs/test025/sim_output/commit.diff
+--@@ -1,14 +1,14 @@
+---diff --git a/tests/ref_outputs/test025/params_system.cfg b/tests/ref_outputs/test025/params_system.cfg
+---index 67677fb..07d79b3 100644
+------ a/tests/ref_outputs/test025/params_system.cfg
+---+++ b/tests/ref_outputs/test025/params_system.cfg
+---@@ -10,7 +10,7 @@ segments = [
+---             ]
+--- prevDir = false
+--- tend = 8e4
+----tsteps = 2000
+---+tsteps = 40
+--- relTol = 1e-8
+--- absTol = 1e-8
+--- T = 298
+--+diff --git a/configs/params_graphite_1param.cfg b/configs/params_graphite_1param.cfg
+--+index 861f365..b2cee9a 100644
+--+--- a/configs/params_graphite_1param.cfg
+--++++ b/configs/params_graphite_1param.cfg
+--+@@ -38,7 +38,7 @@ muRSEI = SEI_early
+--+ rho_SEI = 6.02e28
+--+ n0_SEI = 60
+--+ first_cycle_ratio = 0.9
+--+-R0_SEI = 1
+--++R0_SEI = 0.001
+--+ vfrac_1 = 0.9
+--+ vfrac_2 = 0.3
+--+ k0_SEI = 5e-9
+-- 
+-++++ /dev/null
+-+@@ -1,105 +0,0 @@
+-+-diff --git a/configs/params_graphite_1param.cfg b/configs/params_graphite_1param.cfg
+-+-index 861f365..b2cee9a 100644
+-+---- a/configs/params_graphite_1param.cfg
+-+-+++ b/configs/params_graphite_1param.cfg
+-+-@@ -38,7 +38,7 @@ muRSEI = SEI_early
+-+- rho_SEI = 6.02e28
+-+- n0_SEI = 60
+-+- first_cycle_ratio = 0.9
+-+--R0_SEI = 1
+-+-+R0_SEI = 0.001
+-+- vfrac_1 = 0.9
+-+- vfrac_2 = 0.3
+-+- k0_SEI = 5e-9
+-+-diff --git a/tests/ref_outputs/test025/params_c.cfg b/tests/ref_outputs/test025/params_c.cfg
+-+-index 96a8480..b0af020 100644
+-+---- a/tests/ref_outputs/test025/params_c.cfg
+-+-+++ b/tests/ref_outputs/test025/params_c.cfg
+-+-@@ -35,9 +35,12 @@ Rfilm = 0e-0
+-+- SEI = True
+-+- muRSEI = SEI_early
+-+- rho_SEI = 6.02e28
+-+-+n0_SEI = 60
+-+-+first_cycle_ratio = 0.9
+-+-+R0_SEI = 0.001
+-+- vfrac_1 = 0.9
+-+- vfrac_2 = 0.3
+-+--k0_SEI = 5e-5
+-+-+k0_SEI = 5e-9
+-+- alpha_SEI = 0
+-+- zeta = 10e-9
+-+- eta_p = 0.2
+-+-diff --git a/tests/ref_outputs/test025/sim_output/commit.diff b/tests/ref_outputs/test025/sim_output/commit.diff
+-+-index b4d2d85..0bad94c 100644
+-+---- a/tests/ref_outputs/test025/sim_output/commit.diff
+-+-+++ b/tests/ref_outputs/test025/sim_output/commit.diff
+-+-@@ -1,14 +1,14 @@
+-+--diff --git a/tests/ref_outputs/test025/params_system.cfg b/tests/ref_outputs/test025/params_system.cfg
+-+--index 67677fb..07d79b3 100644
+-+----- a/tests/ref_outputs/test025/params_system.cfg
+-+--+++ b/tests/ref_outputs/test025/params_system.cfg
+-+--@@ -10,7 +10,7 @@ segments = [
+-+--             ]
+-+-- prevDir = false
+-+-- tend = 8e4
+-+---tsteps = 2000
+-+--+tsteps = 40
+-+-- relTol = 1e-8
+-+-- absTol = 1e-8
+-+-- T = 298
+-+-+diff --git a/configs/params_graphite_1param.cfg b/configs/params_graphite_1param.cfg
+-+-+index 861f365..b2cee9a 100644
+-+-+--- a/configs/params_graphite_1param.cfg
+-+-++++ b/configs/params_graphite_1param.cfg
+-+-+@@ -38,7 +38,7 @@ muRSEI = SEI_early
+-+-+ rho_SEI = 6.02e28
+-+-+ n0_SEI = 60
+-+-+ first_cycle_ratio = 0.9
+-+-+-R0_SEI = 1
+-+-++R0_SEI = 0.001
+-+-+ vfrac_1 = 0.9
+-+-+ vfrac_2 = 0.3
+-+-+ k0_SEI = 5e-9
+-+- 
+-+-diff --git a/tests/ref_outputs/test025/sim_output/daetools_config_options.txt b/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
+-+-index 89c9d5d..5b8dc25 100644
+-+---- a/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
+-+-+++ b/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
+-+-@@ -31,7 +31,7 @@
+-+-         },
+-+-         "activity": {
+-+-             "printHeader": "false",
+-+--            "printStats": "true",
+-+-+            "printStats": "false",
+-+-             "timeHorizon": "100.0",
+-+-             "reportingInterval": "1.0",
+-+-             "reportTimeDerivatives": "false",
+-+-diff --git a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p
+-+-index 3751845..324f579 100644
+-+-Binary files a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p and b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p differ
+-+-diff --git a/tests/ref_outputs/test025/sim_output/input_dict_system.p b/tests/ref_outputs/test025/sim_output/input_dict_system.p
+-+-index 910cb62..65d3e88 100644
+-+-Binary files a/tests/ref_outputs/test025/sim_output/input_dict_system.p and b/tests/ref_outputs/test025/sim_output/input_dict_system.p differ
+-+-diff --git a/tests/ref_outputs/test025/sim_output/output_data.mat b/tests/ref_outputs/test025/sim_output/output_data.mat
+-+-index c3bfb71..86300bf 100644
+-+-Binary files a/tests/ref_outputs/test025/sim_output/output_data.mat and b/tests/ref_outputs/test025/sim_output/output_data.mat differ
+-+-diff --git a/tests/ref_outputs/test025/sim_output/run_info.txt b/tests/ref_outputs/test025/sim_output/run_info.txt
+-+-index 8e4eb49..dfc0e28 100644
+-+---- a/tests/ref_outputs/test025/sim_output/run_info.txt
+-+-+++ b/tests/ref_outputs/test025/sim_output/run_info.txt
+-+-@@ -5,7 +5,7 @@ branch name:
+-+- feature/degradation_adsorption
+-+- 
+-+- commit hash:
+-+--3352411
+-+-+e6e8c1e
+-+- 
+-+- to run, from the root repo directory, copy relevant files there,
+-+- edit input_params_system.cfg to point to correct material
+-+-@@ -14,4 +14,4 @@ $ git checkout [commit hash]
+-+- $ patch -p1 < commit.diff:
+-+- $ python[3] mpetrun.py input_params_system.cfg
+-+- 
+-+--Total run time: 0.03687930107116699 s
+-+-+Total run time: 0.5447146892547607 s
+-+-
+- diff --git a/tests/ref_outputs/test025/sim_output/daetools_config_options.txt b/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
+--index 89c9d5d..5b8dc25 100644
+-+deleted file mode 100644
+-+index 5b8dc25..0000000
+- --- a/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
+--+++ b/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
+--@@ -31,7 +31,7 @@
+--         },
+--         "activity": {
+--             "printHeader": "false",
+---            "printStats": "true",
+--+            "printStats": "false",
+--             "timeHorizon": "100.0",
+--             "reportingInterval": "1.0",
+--             "reportTimeDerivatives": "false",
+-++++ /dev/null
+-+@@ -1,137 +0,0 @@
+-+-{
+-+-    "daetools": {
+-+-        "core": {
+-+-            "checkForInfiniteNumbers": "false",
+-+-            "eventTolerance": "1E-7",
+-+-            "logIndent": "    ",
+-+-            "pythonIndent": "    ",
+-+-            "checkUnitsConsistency": "true",
+-+-            "resetLAMatrixAfterDiscontinuity": "true",
+-+-            "printInfo": "false",
+-+-            "nodes": {
+-+-                "useNodeMemoryPools": "false",
+-+-                "deleteNodesThreshold": "1000000"
+-+-            },
+-+-            "equations": {
+-+-                "info": [
+-+-                    "If simplifyExpressions is true equation expressions will be simplified.",
+-+-                    "evaluationMode specifies the mode of evaluation: evaluationTree_OpenMP or computeStack_OpenMP.",
+-+-                    "computeStack_External is set by specifying the adComputeStackEvaluator_t object to the simulation.",
+-+-                    "If numThreads is 0 the default number of threads will be used (typically the number of cores in the system)."
+-+-                ],
+-+-                "simplifyExpressions": "false",
+-+-                "evaluationMode": "computeStack_OpenMP",
+-+-                "evaluationTree_OpenMP": {
+-+-                    "numThreads": "0"
+-+-                },
+-+-                "computeStack_OpenMP": {
+-+-                    "numThreads": "0"
+-+-                }
+-+-            }
+-+-        },
+-+-        "activity": {
+-+-            "printHeader": "false",
+-+-            "printStats": "false",
+-+-            "timeHorizon": "100.0",
+-+-            "reportingInterval": "1.0",
+-+-            "reportTimeDerivatives": "false",
+-+-            "reportSensitivities": "false",
+-+-            "stopAtModelDiscontinuity": "true",
+-+-            "reportDataAroundDiscontinuities": "true",
+-+-            "objFunctionAbsoluteTolerance": "1E-8",
+-+-            "constraintsAbsoluteTolerance": "1E-8",
+-+-            "measuredVariableAbsoluteTolerance": "1E-8"
+-+-        },
+-+-        "datareporting": {
+-+-            "tcpipDataReceiverAddress": "127.0.0.1",
+-+-            "tcpipDataReceiverPort": "50000",
+-+-            "tcpipNumberOfRetries": "10",
+-+-            "tcpipRetryAfterMilliSecs": "1000"
+-+-        },
+-+-        "logging": {
+-+-            "tcpipLogAddress": "127.0.0.1",
+-+-            "tcpipLogPort": "51000"
+-+-        },
+-+-        "minlpsolver": {
+-+-            "printInfo": "false"
+-+-        },
+-+-        "IDAS": {
+-+-            "relativeTolerance": "1E-5",
+-+-            "integrationMode": "Normal",
+-+-            "reportDataInOneStepMode": "false",
+-+-            "nextTimeAfterReinitialization": "1E-7",
+-+-            "printInfo": "false",
+-+-            "numberOfSTNRebuildsDuringInitialization": "1000",
+-+-            "SensitivitySolutionMethod": "Staggered",
+-+-            "SensErrCon": "false",
+-+-            "sensRelativeTolerance": "1E-5",
+-+-            "sensAbsoluteTolerance": "1E-5",
+-+-            "MaxOrd": "5",
+-+-            "MaxNumSteps": "1000",
+-+-            "InitStep": "0.0",
+-+-            "MaxStep": "0.0",
+-+-            "MaxErrTestFails": "10",
+-+-            "MaxNonlinIters": "4",
+-+-            "MaxConvFails": "10",
+-+-            "NonlinConvCoef": "0.33",
+-+-            "SuppressAlg": "false",
+-+-            "NoInactiveRootWarn": "false",
+-+-            "NonlinConvCoefIC": "0.0033",
+-+-            "MaxNumStepsIC": "5",
+-+-            "MaxNumJacsIC": "4",
+-+-            "MaxNumItersIC": "10",
+-+-            "LineSearchOffIC": "false",
+-+-            "gmres": {
+-+-                "kspace": "30",
+-+-                "EpsLin": "0.05",
+-+-                "JacTimesVecFn": "DifferenceQuotient",
+-+-                "DQIncrementFactor": "1.0",
+-+-                "MaxRestarts": "5",
+-+-                "GSType": "MODIFIED_GS"
+-+-            }
+-+-        },
+-+-        "superlu": {
+-+-            "factorizationMethod": "SamePattern_SameRowPerm",
+-+-            "useUserSuppliedWorkSpace": "false",
+-+-            "workspaceSizeMultiplier": "3.0",
+-+-            "workspaceMemoryIncrement": "1.5"
+-+-        },
+-+-        "superlu_mt": {
+-+-            "numThreads": "0"
+-+-        },
+-+-        "intel_pardiso": {
+-+-            "numThreads": "0"
+-+-        },
+-+-        "BONMIN": {
+-+-            "IPOPT": {
+-+-                "print_level": "0",
+-+-                "tol": "1E-5",
+-+-                "linear_solver": "mumps",
+-+-                "hessianApproximation": "limited-memory",
+-+-                "mu_strategy": "adaptive"
+-+-            }
+-+-        },
+-+-        "NLOPT": {
+-+-            "printInfo": "false",
+-+-            "xtol_rel": "1E-6",
+-+-            "xtol_abs": "1E-6",
+-+-            "ftol_rel": "1E-6",
+-+-            "ftol_abs": "1E-6",
+-+-            "constr_tol": "1E-6"
+-+-        },
+-+-        "deal_II": {
+-+-            "printInfo": "false",
+-+-            "assembly": {
+-+-                "info": [
+-+-                    "parallelAssembly can be: Sequential or OpenMP.",
+-+-                    "If numThreads is 0 the default number of threads will be used (typically the number of cores in the system).",
+-+-                    "queueSize specifies the size of the internal queue; when this size is reached the local data are copied to the global matrices."
+-+-                ],
+-+-                "parallelAssembly": "OpenMP",
+-+-                "numThreads": "0",
+-+-                "queueSize": "32"
+-+-            }
+-+-        }
+-+-    }
+-+-}
+-+-
+- diff --git a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p
+--index 3751845..324f579 100644
+--Binary files a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p and b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p differ
+-+deleted file mode 100644
+-+index b8bcbb6..0000000
+-+Binary files a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p and /dev/null differ
+-+diff --git a/tests/ref_outputs/test025/sim_output/input_dict_derived_values.p b/tests/ref_outputs/test025/sim_output/input_dict_derived_values.p
+-+deleted file mode 100644
+-+index e81b9ab..0000000
+-+Binary files a/tests/ref_outputs/test025/sim_output/input_dict_derived_values.p and /dev/null differ
+- diff --git a/tests/ref_outputs/test025/sim_output/input_dict_system.p b/tests/ref_outputs/test025/sim_output/input_dict_system.p
+--index 910cb62..65d3e88 100644
+--Binary files a/tests/ref_outputs/test025/sim_output/input_dict_system.p and b/tests/ref_outputs/test025/sim_output/input_dict_system.p differ
+-+deleted file mode 100644
+-+index bd84823..0000000
+-+Binary files a/tests/ref_outputs/test025/sim_output/input_dict_system.p and /dev/null differ
+-+diff --git a/tests/ref_outputs/test025/sim_output/output_data b/tests/ref_outputs/test025/sim_output/output_data
+-+deleted file mode 100644
+-+index e69de29..0000000
+- diff --git a/tests/ref_outputs/test025/sim_output/output_data.mat b/tests/ref_outputs/test025/sim_output/output_data.mat
+--index c3bfb71..86300bf 100644
+--Binary files a/tests/ref_outputs/test025/sim_output/output_data.mat and b/tests/ref_outputs/test025/sim_output/output_data.mat differ
+-+deleted file mode 100644
+-+index 8e2a9a2..0000000
+-+Binary files a/tests/ref_outputs/test025/sim_output/output_data.mat and /dev/null differ
+- diff --git a/tests/ref_outputs/test025/sim_output/run_info.txt b/tests/ref_outputs/test025/sim_output/run_info.txt
+--index 8e4eb49..dfc0e28 100644
+-+deleted file mode 100644
+-+index 5b9e18a..0000000
+- --- a/tests/ref_outputs/test025/sim_output/run_info.txt
+--+++ b/tests/ref_outputs/test025/sim_output/run_info.txt
+--@@ -5,7 +5,7 @@ branch name:
+-- feature/degradation_adsorption
+-- 
+-- commit hash:
+---3352411
+--+e6e8c1e
+-- 
+-- to run, from the root repo directory, copy relevant files there,
+-- edit input_params_system.cfg to point to correct material
+--@@ -14,4 +14,4 @@ $ git checkout [commit hash]
+-- $ patch -p1 < commit.diff:
+-- $ python[3] mpetrun.py input_params_system.cfg
+-- 
+---Total run time: 0.03687930107116699 s
+--+Total run time: 0.5447146892547607 s
+-++++ /dev/null
+-+@@ -1,17 +0,0 @@
+-+-mpet version:
+-+-0.1.6
+-+-
+-+-branch name:
+-+-feature/degradation_adsorption
+-+-
+-+-commit hash:
+-+-e6e8c1e
+-+-
+-+-to run, from the root repo directory, copy relevant files there,
+-+-edit input_params_system.cfg to point to correct material
+-+-params files, and:
+-+-$ git checkout [commit hash]
+-+-$ patch -p1 < commit.diff:
+-+-$ python[3] mpetrun.py input_params_system.cfg
+-+-
+-+-Total run time: 0.5398595333099365 s
 - 
-++++ /dev/null
-+@@ -1,105 +0,0 @@
-+-diff --git a/configs/params_graphite_1param.cfg b/configs/params_graphite_1param.cfg
-+-index 861f365..b2cee9a 100644
-+---- a/configs/params_graphite_1param.cfg
-+-+++ b/configs/params_graphite_1param.cfg
-+-@@ -38,7 +38,7 @@ muRSEI = SEI_early
-+- rho_SEI = 6.02e28
-+- n0_SEI = 60
-+- first_cycle_ratio = 0.9
-+--R0_SEI = 1
-+-+R0_SEI = 0.001
-+- vfrac_1 = 0.9
-+- vfrac_2 = 0.3
-+- k0_SEI = 5e-9
-+-diff --git a/tests/ref_outputs/test025/params_c.cfg b/tests/ref_outputs/test025/params_c.cfg
-+-index 96a8480..b0af020 100644
-+---- a/tests/ref_outputs/test025/params_c.cfg
-+-+++ b/tests/ref_outputs/test025/params_c.cfg
-+-@@ -35,9 +35,12 @@ Rfilm = 0e-0
-+- SEI = True
-+- muRSEI = SEI_early
-+- rho_SEI = 6.02e28
-+-+n0_SEI = 60
-+-+first_cycle_ratio = 0.9
-+-+R0_SEI = 0.001
-+- vfrac_1 = 0.9
-+- vfrac_2 = 0.3
-+--k0_SEI = 5e-5
-+-+k0_SEI = 5e-9
-+- alpha_SEI = 0
-+- zeta = 10e-9
-+- eta_p = 0.2
-+-diff --git a/tests/ref_outputs/test025/sim_output/commit.diff b/tests/ref_outputs/test025/sim_output/commit.diff
-+-index b4d2d85..0bad94c 100644
-+---- a/tests/ref_outputs/test025/sim_output/commit.diff
-+-+++ b/tests/ref_outputs/test025/sim_output/commit.diff
-+-@@ -1,14 +1,14 @@
-+--diff --git a/tests/ref_outputs/test025/params_system.cfg b/tests/ref_outputs/test025/params_system.cfg
-+--index 67677fb..07d79b3 100644
-+----- a/tests/ref_outputs/test025/params_system.cfg
-+--+++ b/tests/ref_outputs/test025/params_system.cfg
-+--@@ -10,7 +10,7 @@ segments = [
-+--             ]
-+-- prevDir = false
-+-- tend = 8e4
-+---tsteps = 2000
-+--+tsteps = 40
-+-- relTol = 1e-8
-+-- absTol = 1e-8
-+-- T = 298
-+-+diff --git a/configs/params_graphite_1param.cfg b/configs/params_graphite_1param.cfg
-+-+index 861f365..b2cee9a 100644
-+-+--- a/configs/params_graphite_1param.cfg
-+-++++ b/configs/params_graphite_1param.cfg
-+-+@@ -38,7 +38,7 @@ muRSEI = SEI_early
-+-+ rho_SEI = 6.02e28
-+-+ n0_SEI = 60
-+-+ first_cycle_ratio = 0.9
-+-+-R0_SEI = 1
-+-++R0_SEI = 0.001
-+-+ vfrac_1 = 0.9
-+-+ vfrac_2 = 0.3
-+-+ k0_SEI = 5e-9
-+- 
-+-diff --git a/tests/ref_outputs/test025/sim_output/daetools_config_options.txt b/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
-+-index 89c9d5d..5b8dc25 100644
-+---- a/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
-+-+++ b/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
-+-@@ -31,7 +31,7 @@
-+-         },
-+-         "activity": {
-+-             "printHeader": "false",
-+--            "printStats": "true",
-+-+            "printStats": "false",
-+-             "timeHorizon": "100.0",
-+-             "reportingInterval": "1.0",
-+-             "reportTimeDerivatives": "false",
-+-diff --git a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p
-+-index 3751845..324f579 100644
-+-Binary files a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p and b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p differ
-+-diff --git a/tests/ref_outputs/test025/sim_output/input_dict_system.p b/tests/ref_outputs/test025/sim_output/input_dict_system.p
-+-index 910cb62..65d3e88 100644
-+-Binary files a/tests/ref_outputs/test025/sim_output/input_dict_system.p and b/tests/ref_outputs/test025/sim_output/input_dict_system.p differ
-+-diff --git a/tests/ref_outputs/test025/sim_output/output_data.mat b/tests/ref_outputs/test025/sim_output/output_data.mat
-+-index c3bfb71..86300bf 100644
-+-Binary files a/tests/ref_outputs/test025/sim_output/output_data.mat and b/tests/ref_outputs/test025/sim_output/output_data.mat differ
-+-diff --git a/tests/ref_outputs/test025/sim_output/run_info.txt b/tests/ref_outputs/test025/sim_output/run_info.txt
-+-index 8e4eb49..dfc0e28 100644
-+---- a/tests/ref_outputs/test025/sim_output/run_info.txt
-+-+++ b/tests/ref_outputs/test025/sim_output/run_info.txt
-+-@@ -5,7 +5,7 @@ branch name:
-+- feature/degradation_adsorption
-+- 
-+- commit hash:
-+--3352411
-+-+e6e8c1e
-+- 
-+- to run, from the root repo directory, copy relevant files there,
-+- edit input_params_system.cfg to point to correct material
-+-@@ -14,4 +14,4 @@ $ git checkout [commit hash]
-+- $ patch -p1 < commit.diff:
-+- $ python[3] mpetrun.py input_params_system.cfg
-+- 
-+--Total run time: 0.03687930107116699 s
-+-+Total run time: 0.5447146892547607 s
-+-
- diff --git a/tests/ref_outputs/test025/sim_output/daetools_config_options.txt b/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
--index 89c9d5d..5b8dc25 100644
-+deleted file mode 100644
-+index 5b8dc25..0000000
- --- a/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
--+++ b/tests/ref_outputs/test025/sim_output/daetools_config_options.txt
--@@ -31,7 +31,7 @@
--         },
--         "activity": {
--             "printHeader": "false",
---            "printStats": "true",
--+            "printStats": "false",
--             "timeHorizon": "100.0",
--             "reportingInterval": "1.0",
--             "reportTimeDerivatives": "false",
-++++ /dev/null
-+@@ -1,137 +0,0 @@
-+-{
-+-    "daetools": {
-+-        "core": {
-+-            "checkForInfiniteNumbers": "false",
-+-            "eventTolerance": "1E-7",
-+-            "logIndent": "    ",
-+-            "pythonIndent": "    ",
-+-            "checkUnitsConsistency": "true",
-+-            "resetLAMatrixAfterDiscontinuity": "true",
-+-            "printInfo": "false",
-+-            "nodes": {
-+-                "useNodeMemoryPools": "false",
-+-                "deleteNodesThreshold": "1000000"
-+-            },
-+-            "equations": {
-+-                "info": [
-+-                    "If simplifyExpressions is true equation expressions will be simplified.",
-+-                    "evaluationMode specifies the mode of evaluation: evaluationTree_OpenMP or computeStack_OpenMP.",
-+-                    "computeStack_External is set by specifying the adComputeStackEvaluator_t object to the simulation.",
-+-                    "If numThreads is 0 the default number of threads will be used (typically the number of cores in the system)."
-+-                ],
-+-                "simplifyExpressions": "false",
-+-                "evaluationMode": "computeStack_OpenMP",
-+-                "evaluationTree_OpenMP": {
-+-                    "numThreads": "0"
-+-                },
-+-                "computeStack_OpenMP": {
-+-                    "numThreads": "0"
-+-                }
-+-            }
-+-        },
-+-        "activity": {
-+-            "printHeader": "false",
-+-            "printStats": "false",
-+-            "timeHorizon": "100.0",
-+-            "reportingInterval": "1.0",
-+-            "reportTimeDerivatives": "false",
-+-            "reportSensitivities": "false",
-+-            "stopAtModelDiscontinuity": "true",
-+-            "reportDataAroundDiscontinuities": "true",
-+-            "objFunctionAbsoluteTolerance": "1E-8",
-+-            "constraintsAbsoluteTolerance": "1E-8",
-+-            "measuredVariableAbsoluteTolerance": "1E-8"
-+-        },
-+-        "datareporting": {
-+-            "tcpipDataReceiverAddress": "127.0.0.1",
-+-            "tcpipDataReceiverPort": "50000",
-+-            "tcpipNumberOfRetries": "10",
-+-            "tcpipRetryAfterMilliSecs": "1000"
-+-        },
-+-        "logging": {
-+-            "tcpipLogAddress": "127.0.0.1",
-+-            "tcpipLogPort": "51000"
-+-        },
-+-        "minlpsolver": {
-+-            "printInfo": "false"
-+-        },
-+-        "IDAS": {
-+-            "relativeTolerance": "1E-5",
-+-            "integrationMode": "Normal",
-+-            "reportDataInOneStepMode": "false",
-+-            "nextTimeAfterReinitialization": "1E-7",
-+-            "printInfo": "false",
-+-            "numberOfSTNRebuildsDuringInitialization": "1000",
-+-            "SensitivitySolutionMethod": "Staggered",
-+-            "SensErrCon": "false",
-+-            "sensRelativeTolerance": "1E-5",
-+-            "sensAbsoluteTolerance": "1E-5",
-+-            "MaxOrd": "5",
-+-            "MaxNumSteps": "1000",
-+-            "InitStep": "0.0",
-+-            "MaxStep": "0.0",
-+-            "MaxErrTestFails": "10",
-+-            "MaxNonlinIters": "4",
-+-            "MaxConvFails": "10",
-+-            "NonlinConvCoef": "0.33",
-+-            "SuppressAlg": "false",
-+-            "NoInactiveRootWarn": "false",
-+-            "NonlinConvCoefIC": "0.0033",
-+-            "MaxNumStepsIC": "5",
-+-            "MaxNumJacsIC": "4",
-+-            "MaxNumItersIC": "10",
-+-            "LineSearchOffIC": "false",
-+-            "gmres": {
-+-                "kspace": "30",
-+-                "EpsLin": "0.05",
-+-                "JacTimesVecFn": "DifferenceQuotient",
-+-                "DQIncrementFactor": "1.0",
-+-                "MaxRestarts": "5",
-+-                "GSType": "MODIFIED_GS"
-+-            }
-+-        },
-+-        "superlu": {
-+-            "factorizationMethod": "SamePattern_SameRowPerm",
-+-            "useUserSuppliedWorkSpace": "false",
-+-            "workspaceSizeMultiplier": "3.0",
-+-            "workspaceMemoryIncrement": "1.5"
-+-        },
-+-        "superlu_mt": {
-+-            "numThreads": "0"
-+-        },
-+-        "intel_pardiso": {
-+-            "numThreads": "0"
-+-        },
-+-        "BONMIN": {
-+-            "IPOPT": {
-+-                "print_level": "0",
-+-                "tol": "1E-5",
-+-                "linear_solver": "mumps",
-+-                "hessianApproximation": "limited-memory",
-+-                "mu_strategy": "adaptive"
-+-            }
-+-        },
-+-        "NLOPT": {
-+-            "printInfo": "false",
-+-            "xtol_rel": "1E-6",
-+-            "xtol_abs": "1E-6",
-+-            "ftol_rel": "1E-6",
-+-            "ftol_abs": "1E-6",
-+-            "constr_tol": "1E-6"
-+-        },
-+-        "deal_II": {
-+-            "printInfo": "false",
-+-            "assembly": {
-+-                "info": [
-+-                    "parallelAssembly can be: Sequential or OpenMP.",
-+-                    "If numThreads is 0 the default number of threads will be used (typically the number of cores in the system).",
-+-                    "queueSize specifies the size of the internal queue; when this size is reached the local data are copied to the global matrices."
-+-                ],
-+-                "parallelAssembly": "OpenMP",
-+-                "numThreads": "0",
-+-                "queueSize": "32"
-+-            }
-+-        }
-+-    }
-+-}
-+-
- diff --git a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p
--index 3751845..324f579 100644
+-diff --git a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p
+-index b8bcbb6..8bcaadc 100644
 -Binary files a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p and b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p differ
-+deleted file mode 100644
-+index b8bcbb6..0000000
-+Binary files a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p and /dev/null differ
-+diff --git a/tests/ref_outputs/test025/sim_output/input_dict_derived_values.p b/tests/ref_outputs/test025/sim_output/input_dict_derived_values.p
-+deleted file mode 100644
-+index e81b9ab..0000000
-+Binary files a/tests/ref_outputs/test025/sim_output/input_dict_derived_values.p and /dev/null differ
- diff --git a/tests/ref_outputs/test025/sim_output/input_dict_system.p b/tests/ref_outputs/test025/sim_output/input_dict_system.p
--index 910cb62..65d3e88 100644
+-diff --git a/tests/ref_outputs/test025/sim_output/input_dict_system.p b/tests/ref_outputs/test025/sim_output/input_dict_system.p
+-index bd84823..e42a6a0 100644
 -Binary files a/tests/ref_outputs/test025/sim_output/input_dict_system.p and b/tests/ref_outputs/test025/sim_output/input_dict_system.p differ
-+deleted file mode 100644
-+index bd84823..0000000
-+Binary files a/tests/ref_outputs/test025/sim_output/input_dict_system.p and /dev/null differ
-+diff --git a/tests/ref_outputs/test025/sim_output/output_data b/tests/ref_outputs/test025/sim_output/output_data
-+deleted file mode 100644
-+index e69de29..0000000
- diff --git a/tests/ref_outputs/test025/sim_output/output_data.mat b/tests/ref_outputs/test025/sim_output/output_data.mat
--index c3bfb71..86300bf 100644
+-diff --git a/tests/ref_outputs/test025/sim_output/output_data.mat b/tests/ref_outputs/test025/sim_output/output_data.mat
+-index 8e2a9a2..c05b33b 100644
 -Binary files a/tests/ref_outputs/test025/sim_output/output_data.mat and b/tests/ref_outputs/test025/sim_output/output_data.mat differ
-+deleted file mode 100644
-+index 8e2a9a2..0000000
-+Binary files a/tests/ref_outputs/test025/sim_output/output_data.mat and /dev/null differ
- diff --git a/tests/ref_outputs/test025/sim_output/run_info.txt b/tests/ref_outputs/test025/sim_output/run_info.txt
--index 8e4eb49..dfc0e28 100644
-+deleted file mode 100644
-+index 5b9e18a..0000000
- --- a/tests/ref_outputs/test025/sim_output/run_info.txt
+-diff --git a/tests/ref_outputs/test025/sim_output/run_info.txt b/tests/ref_outputs/test025/sim_output/run_info.txt
+-index 5b9e18a..49469de 100644
+---- a/tests/ref_outputs/test025/sim_output/run_info.txt
 -+++ b/tests/ref_outputs/test025/sim_output/run_info.txt
 -@@ -5,7 +5,7 @@ branch name:
 - feature/degradation_adsorption
 - 
 - commit hash:
---3352411
--+e6e8c1e
+--e6e8c1e
+-+8e04555
 - 
 - to run, from the root repo directory, copy relevant files there,
 - edit input_params_system.cfg to point to correct material
@@ -474,47 +876,29 @@ index 3e9d55f..e24a6d7 100644
 - $ patch -p1 < commit.diff:
 - $ python[3] mpetrun.py input_params_system.cfg
 - 
---Total run time: 0.03687930107116699 s
--+Total run time: 0.5447146892547607 s
-++++ /dev/null
-+@@ -1,17 +0,0 @@
-+-mpet version:
-+-0.1.6
-+-
-+-branch name:
-+-feature/degradation_adsorption
-+-
-+-commit hash:
-+-e6e8c1e
-+-
-+-to run, from the root repo directory, copy relevant files there,
-+-edit input_params_system.cfg to point to correct material
-+-params files, and:
-+-$ git checkout [commit hash]
-+-$ patch -p1 < commit.diff:
-+-$ python[3] mpetrun.py input_params_system.cfg
-+-
-+-Total run time: 0.5398595333099365 s
+--Total run time: 0.5398595333099365 s
+-+Total run time: 0.6366536617279053 s
++ k0_SEI = 5e-6
  
 diff --git a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p
-index b8bcbb6..8bcaadc 100644
+index 881607c..b7ed920 100644
 Binary files a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p and b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p differ
 diff --git a/tests/ref_outputs/test025/sim_output/input_dict_system.p b/tests/ref_outputs/test025/sim_output/input_dict_system.p
-index bd84823..e42a6a0 100644
+index a0752ec..576f280 100644
 Binary files a/tests/ref_outputs/test025/sim_output/input_dict_system.p and b/tests/ref_outputs/test025/sim_output/input_dict_system.p differ
 diff --git a/tests/ref_outputs/test025/sim_output/output_data.mat b/tests/ref_outputs/test025/sim_output/output_data.mat
-index 8e2a9a2..c05b33b 100644
+index 4bb49d3..fcc5285 100644
 Binary files a/tests/ref_outputs/test025/sim_output/output_data.mat and b/tests/ref_outputs/test025/sim_output/output_data.mat differ
 diff --git a/tests/ref_outputs/test025/sim_output/run_info.txt b/tests/ref_outputs/test025/sim_output/run_info.txt
-index 5b9e18a..49469de 100644
+index a90c8f7..e9624b1 100644
 --- a/tests/ref_outputs/test025/sim_output/run_info.txt
 +++ b/tests/ref_outputs/test025/sim_output/run_info.txt
 @@ -5,7 +5,7 @@ branch name:
  feature/degradation_adsorption
  
  commit hash:
--e6e8c1e
-+8e04555
+-8e04555
++cdfc19a
  
  to run, from the root repo directory, copy relevant files there,
  edit input_params_system.cfg to point to correct material
@@ -522,6 +906,6 @@ index 5b9e18a..49469de 100644
  $ patch -p1 < commit.diff:
  $ python[3] mpetrun.py input_params_system.cfg
  
--Total run time: 0.5398595333099365 s
-+Total run time: 0.6366536617279053 s
+-Total run time: 0.6301689147949219 s
++Total run time: 1.322474718093872 s
 
diff --git a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p
index 881607c..4ecb761 100644
Binary files a/tests/ref_outputs/test025/sim_output/input_dict_cathode.p and b/tests/ref_outputs/test025/sim_output/input_dict_cathode.p differ
diff --git a/tests/ref_outputs/test025/sim_output/input_dict_system.p b/tests/ref_outputs/test025/sim_output/input_dict_system.p
index a0752ec..28d2182 100644
Binary files a/tests/ref_outputs/test025/sim_output/input_dict_system.p and b/tests/ref_outputs/test025/sim_output/input_dict_system.p differ
diff --git a/tests/ref_outputs/test025/sim_output/output_data.mat b/tests/ref_outputs/test025/sim_output/output_data.mat
index 4bb49d3..7deaf06 100644
Binary files a/tests/ref_outputs/test025/sim_output/output_data.mat and b/tests/ref_outputs/test025/sim_output/output_data.mat differ
diff --git a/tests/ref_outputs/test025/sim_output/run_info.txt b/tests/ref_outputs/test025/sim_output/run_info.txt
index a90c8f7..93e448b 100644
--- a/tests/ref_outputs/test025/sim_output/run_info.txt
+++ b/tests/ref_outputs/test025/sim_output/run_info.txt
@@ -5,7 +5,7 @@ branch name:
 feature/degradation_adsorption
 
 commit hash:
-8e04555
+cdfc19a
 
 to run, from the root repo directory, copy relevant files there,
 edit input_params_system.cfg to point to correct material
@@ -14,4 +14,4 @@ $ git checkout [commit hash]
 $ patch -p1 < commit.diff:
 $ python[3] mpetrun.py input_params_system.cfg
 
-Total run time: 0.6301689147949219 s
+Total run time: 1.476215124130249 s

