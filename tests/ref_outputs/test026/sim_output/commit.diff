diff --git a/configs/params_system.cfg b/configs/params_system.cfg
index 19a21b4..3f4b3bc 100644
--- a/configs/params_system.cfg
+++ b/configs/params_system.cfg
@@ -10,7 +10,7 @@ profileType = CC
 # (positive for discharge, negative for charge)
 # If using wavefunction form, write it as a function of t (time) in min
 # in sympy format.
-Crate = 0.01*sin(t)
+Crate = 0.01*sin(2*pi*t)
 # Optional nominal 1C current density for the cell, A/m^2
 # 1C_current_density = 12.705
 # Voltage cutoffs, V
@@ -46,13 +46,13 @@ prevDir = false
 # with 0's if there is no period. Optional, default if 1e8
 period = 1
 # Final time (only used for CV), [s]
-tend = 1.2e3
+tend = 300
 # Number disc. in time
 # Note time stepping is adaptive, variable-order stepping, so this
 # affects only the interpolated output values, not simulation
 # accuracy. The output will have all simulation values at a linear
 # spacing between initial and final times with tsteps total outputs.
-tsteps = 200
+tsteps = 500
 # Relative Tolerance
 relTol = 1e-6
 # Absolute Tolerance
@@ -70,7 +70,7 @@ seed = 0
 # printing internal variable concentrations) files. hdf5 files
 # are better for cycling, as they store less information and there is less
 # opening/rewriting of files. Default is mat
-dataReporter = hdf5
+dataReporter = mat
 # Series resistance, [Ohm m^2]
 Rser = 0.
 # Cathode, anode, and separator numer disc. in x direction (volumes in electrodes)
diff --git a/mpet/config/configuration.py b/mpet/config/configuration.py
index ec4320f..35a22b2 100644
--- a/mpet/config/configuration.py
+++ b/mpet/config/configuration.py
@@ -469,6 +469,7 @@ class Config:
         from :meth:`_process_config`.
         """
         # non-dimensional scalings
+        print(self['t_ref'], self['period'], self['period'] * 60 / self['t_ref'])
         self['period'] = self['period'] * 60 / self['t_ref']  # convert to s
         self['T'] = self['T'] / constants.T_ref
         self['Rser'] = self['Rser'] / self['Rser_ref']
@@ -576,6 +577,7 @@ class Config:
             # if the system is not a functional waveform
             if self['profileType'] == 'CC' and not np.allclose(self['currset'], 0., atol=1e-12):
                 self['tend'] = np.abs(self['capFrac'] / self['currset'])
+        print(self['tend'])
 
     def _distr_part(self):
         """
diff --git a/mpet/mod_cell.py b/mpet/mod_cell.py
index 2fc6da1..cab5ddf 100644
--- a/mpet/mod_cell.py
+++ b/mpet/mod_cell.py
@@ -390,6 +390,7 @@ class ModCell(dae.daeModel):
                     eq.Residual = f(
                         dae.Time()/config["period"] - dae.Floor(dae.Time()/config["period"])) \
                         - self.current()
+                    #eq.Residual = f(dae.Time()) - self.current()
         elif self.profileType == "CV":
             # Keep applied potential constant
             eq = self.CreateEquation("applied_potential")

